{"ast":null,"code":"var _jsxFileName = \"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/todo/ListTodosComponent.jsx\";\nimport React, { Component } from 'react';\nimport TodoDataService from '../../api/todo/TodoDataService';\nimport AuthenticationService from '../../api/todo/AuthenticationService.js';\nimport moment from 'moment';\nimport Placeholder from 'react-bootstrap/Placeholder';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col'; // Display a list of all Todos, where the user can manage, add, update, delete todos.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListTodosComponent extends Component {\n  constructor(props) {\n    super(props); // State - contains the array of todos, as well as a message for deleteTodo successful\n\n    this.state = {\n      todos: [],\n      message: null\n    };\n    this.updateTodoClicked = this.updateTodoClicked.bind(this);\n    this.deleteTodoClicked = this.deleteTodoClicked.bind(this);\n    this.addTodoClicked = this.addTodoClicked.bind(this);\n    this.refreshTodos = this.refreshTodos.bind(this);\n  } // bring todos from axios get into current state for display, after initial render has been triggered.\n\n\n  componentDidMount() {\n    this.refreshTodos();\n  } // same as above, but for subsequent refreshes\n\n\n  refreshTodos() {\n    let username = AuthenticationService.getLoggedInEmail();\n    TodoDataService.retrieveAllTodos(username).then(response => {\n      this.setState({\n        todos: response.data\n      }); // console.log(response)\n    });\n  } // handler for when delete todo is clicked\n\n\n  deleteTodoClicked(todoId) {\n    let username = AuthenticationService.getLoggedInEmail();\n    TodoDataService.deleteTodo(username, todoId).then(response => {\n      this.setState({\n        message: `Delete of todo ${todoId} was successful`\n      });\n      this.refreshTodos();\n    });\n  } // handler for when update todo is clicked\n\n\n  updateTodoClicked(todoId) {\n    this.props.history.push(`/todos/${todoId}`);\n  } // handler for when add todo is clicked\n\n\n  addTodoClicked() {\n    this.props.history.push(`/todos/-1`);\n  } // jsx render for entire table\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-dark\",\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: \"MY LIST\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-white\",\n            children: [this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert alert-success\",\n              children: this.state.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 72\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table text-white\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Is Completed\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Target Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: // script that for each todo, map it and display id, desc, done, targetDate, and buttons\n                this.state.todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: todo.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: todo.done.toString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: moment(todo.targetDate).format('YYYY-MM-DD')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-success\",\n                      onClick: () => this.updateTodoClicked(todo.id),\n                      children: \"Update\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-warning\",\n                      onClick: () => this.deleteTodoClicked(todo.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 49\n                  }, this)]\n                }, todo.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-success\",\n                onClick: () => this.addTodoClicked(),\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListTodosComponent;","map":{"version":3,"sources":["/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/todo/ListTodosComponent.jsx"],"names":["React","Component","TodoDataService","AuthenticationService","moment","Placeholder","Card","Container","Row","Col","ListTodosComponent","constructor","props","state","todos","message","updateTodoClicked","bind","deleteTodoClicked","addTodoClicked","refreshTodos","componentDidMount","username","getLoggedInEmail","retrieveAllTodos","then","response","setState","data","todoId","deleteTodo","history","push","render","map","todo","description","done","toString","targetDate","format","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TodoDataService from '../../api/todo/TodoDataService';\nimport AuthenticationService from '../../api/todo/AuthenticationService.js';\nimport moment from 'moment'\nimport Placeholder from 'react-bootstrap/Placeholder'\nimport Card from 'react-bootstrap/Card'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\n// Display a list of all Todos, where the user can manage, add, update, delete todos.\nclass ListTodosComponent extends Component {\n\n    constructor(props) {\n        super(props)\n        // State - contains the array of todos, as well as a message for deleteTodo successful\n        this.state = {\n            todos: [],\n            message: null\n        }\n        this.updateTodoClicked = this.updateTodoClicked.bind(this);\n        this.deleteTodoClicked = this.deleteTodoClicked.bind(this);\n        this.addTodoClicked = this.addTodoClicked.bind(this);\n        this.refreshTodos = this.refreshTodos.bind(this);\n    }\n\n    // bring todos from axios get into current state for display, after initial render has been triggered.\n    componentDidMount() {\n        this.refreshTodos();\n    }\n\n    // same as above, but for subsequent refreshes\n    refreshTodos() {\n        let username = AuthenticationService.getLoggedInEmail();\n        TodoDataService.retrieveAllTodos(username)\n            .then(\n                response => {\n                    this.setState({ todos: response.data })\n                    // console.log(response)\n                }\n            )\n    }\n\n    // handler for when delete todo is clicked\n    deleteTodoClicked(todoId) {\n        let username = AuthenticationService.getLoggedInEmail();\n        TodoDataService.deleteTodo(username, todoId)\n            .then(\n                response => {\n                    this.setState({ message: `Delete of todo ${todoId} was successful` });\n                    this.refreshTodos();\n                }\n            )\n    }\n\n    // handler for when update todo is clicked\n    updateTodoClicked(todoId) {\n        this.props.history.push(`/todos/${todoId}`);\n    }\n\n    // handler for when add todo is clicked\n    addTodoClicked() {\n        this.props.history.push(`/todos/-1`);\n    }\n\n    // jsx render for entire table\n    render() {\n        return (\n            \n            <div>\n                    <Row>\n                        <Col></Col>\n                        <Col></Col>\n                        <Col></Col>\n                        <Col>\n                        <Card className=\"text-dark\">\n                            {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\n                            <Card.Body>\n                            <Card.Text>\n                                <h1>MY LIST</h1>\n                            </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    <div className=\"text-white\">{this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\n                        <table className=\"table text-white\">\n                            <thead>\n                                <tr>\n                                    <th>Description</th>\n                                    <th>Is Completed</th>\n                                    <th>Target Date</th>\n                                    <th>Update</th>\n                                    <th>Delete</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    // script that for each todo, map it and display id, desc, done, targetDate, and buttons\n                                    this.state.todos.map(\n                                        todo =>\n                                            <tr key={todo.id}>\n                                                <td>{todo.description}</td>\n                                                <td>{todo.done.toString()}</td>\n                                                <td>{moment(todo.targetDate).format('YYYY-MM-DD')}</td>\n                                                <td><button className=\"btn btn-success\" onClick={() => this.updateTodoClicked(todo.id)}>Update</button></td>\n                                                <td><button className=\"btn btn-warning\" onClick={() => this.deleteTodoClicked(todo.id)}>Delete</button></td>\n                                            </tr>\n                                    )\n                                }\n                            </tbody>\n                        </table>\n                        <div className = \"row\"><button className = \"btn btn-success\" onClick={() => this.addTodoClicked()}>Add</button></div>\n                    </div>\n                        </Col>\n                    </Row>\n            \n            </div>\n        )\n    }\n}\n\nexport default ListTodosComponent;"]},"metadata":{},"sourceType":"module"}