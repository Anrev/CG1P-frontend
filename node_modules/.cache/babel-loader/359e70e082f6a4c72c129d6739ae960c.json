{"ast":null,"code":"import axios from 'axios';\nimport { API_URL, SESSION_INTERCEPTOR, SESSION_TOKEN, SESSION_USER_ID } from '../Constants'; // Service for keeping track of currently authenticated user\n// Also facilitates retrieval of currently logged in email\n\nclass AuthenticationService {\n  // Log out\n  logout() {\n    axios.interceptors.request.eject(sessionStorage.getItem(SESSION_INTERCEPTOR));\n    sessionStorage.clear();\n  } // Check if user is logged in\n\n\n  isUserLoggedIn() {\n    let userId = sessionStorage.getItem(SESSION_USER_ID);\n    console.log('logged in: %s', userId);\n    if (userId === null) return false;\n    return true;\n  } // CODE FOR BASIC AUTH\n  // executeBasicAuthenticationService(email, password) {\n  //     return axios.get(`${API_URL}/basicauth`,\n  //         { headers: { authorization: this.createBasicAuthToken(email, password) } })\n  // }\n  // createBasicAuthToken(email, password) {\n  //     let token = 'Basic ' + window.btoa(email + ':' + password)\n  //     sessionStorage.setItem(SESSION_TOKEN, token)\n  //     console.log('token: %s', token)\n  //     return token\n  // }\n  // registerSuccessfulLoginForBasicAuth(email) {\n  //     return axios.get(`${API_URL}/user/email/${email}`)\n  // }\n  // BELOW CODE IS SPECIFICALLY FOR JWT AUTH\n\n  /*\n      execute authentication\n  */\n\n\n  executeJwtAuthenticationService(username, password) {\n    return axios.post(`${API_URL}/authenticate`, {\n      username,\n      password\n    });\n  }\n\n  registerSuccessfulLoginForJwt(email) {\n    return axios.get(`${API_URL}/user/email/${email}`);\n  }\n\n}\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["/Users/anrev/Desktop/CG1P-frontend/src/api/AuthenticationService.js"],"names":["axios","API_URL","SESSION_INTERCEPTOR","SESSION_TOKEN","SESSION_USER_ID","AuthenticationService","logout","interceptors","request","eject","sessionStorage","getItem","clear","isUserLoggedIn","userId","console","log","executeJwtAuthenticationService","username","password","post","registerSuccessfulLoginForJwt","email","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,mBAAlB,EAAuCC,aAAvC,EAAsDC,eAAtD,QAA6E,cAA7E,C,CAEA;AACA;;AACA,MAAMC,qBAAN,CAA4B;AAExB;AACAC,EAAAA,MAAM,GAAG;AACLN,IAAAA,KAAK,CAACO,YAAN,CAAmBC,OAAnB,CAA2BC,KAA3B,CAAiCC,cAAc,CAACC,OAAf,CAAuBT,mBAAvB,CAAjC;AACAQ,IAAAA,cAAc,CAACE,KAAf;AACH,GANuB,CAQxB;;;AACAC,EAAAA,cAAc,GAAG;AACb,QAAIC,MAAM,GAAGJ,cAAc,CAACC,OAAf,CAAuBP,eAAvB,CAAb;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,MAA7B;AACA,QAAIA,MAAM,KAAK,IAAf,EAAqB,OAAO,KAAP;AACrB,WAAO,IAAP;AACH,GAduB,CAgBxB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AACJ;AACA;;;AAEIG,EAAAA,+BAA+B,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAChD,WAAOnB,KAAK,CAACoB,IAAN,CAAY,GAAEnB,OAAQ,eAAtB,EAAsC;AACzCiB,MAAAA,QADyC;AAEzCC,MAAAA;AAFyC,KAAtC,CAAP;AAIH;;AAEDE,EAAAA,6BAA6B,CAACC,KAAD,EAAQ;AACjC,WAAOtB,KAAK,CAACuB,GAAN,CAAW,GAAEtB,OAAQ,eAAcqB,KAAM,EAAzC,CAAP;AACH;;AAhDuB;;AAqD5B,eAAe,IAAIjB,qBAAJ,EAAf","sourcesContent":["import axios from 'axios'\nimport { API_URL, SESSION_INTERCEPTOR, SESSION_TOKEN, SESSION_USER_ID } from '../Constants'\n\n// Service for keeping track of currently authenticated user\n// Also facilitates retrieval of currently logged in email\nclass AuthenticationService {\n\n    // Log out\n    logout() {\n        axios.interceptors.request.eject(sessionStorage.getItem(SESSION_INTERCEPTOR))\n        sessionStorage.clear()\n    }\n\n    // Check if user is logged in\n    isUserLoggedIn() {\n        let userId = sessionStorage.getItem(SESSION_USER_ID)\n        console.log('logged in: %s', userId)\n        if (userId === null) return false\n        return true\n    }\n\n    // CODE FOR BASIC AUTH\n    // executeBasicAuthenticationService(email, password) {\n    //     return axios.get(`${API_URL}/basicauth`,\n    //         { headers: { authorization: this.createBasicAuthToken(email, password) } })\n    // }\n\n    // createBasicAuthToken(email, password) {\n    //     let token = 'Basic ' + window.btoa(email + ':' + password)\n    //     sessionStorage.setItem(SESSION_TOKEN, token)\n    //     console.log('token: %s', token)\n    //     return token\n    // }\n\n    // registerSuccessfulLoginForBasicAuth(email) {\n    //     return axios.get(`${API_URL}/user/email/${email}`)\n    // }\n\n    // BELOW CODE IS SPECIFICALLY FOR JWT AUTH\n\n    /*\n        execute authentication\n    */\n\n    executeJwtAuthenticationService(username, password) {\n        return axios.post(`${API_URL}/authenticate`, {\n            username,\n            password\n        })\n    }\n\n    registerSuccessfulLoginForJwt(email) {\n        return axios.get(`${API_URL}/user/email/${email}`)\n    }\n\n\n}\n\nexport default new AuthenticationService()"]},"metadata":{},"sourceType":"module"}