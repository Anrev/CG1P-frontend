{"ast":null,"code":"var _jsxFileName = \"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/ListTodosComponent.jsx\";\nimport React, { Component } from 'react';\nimport TodoDataService from '../api/TodoDataService';\nimport moment from 'moment';\nimport Col from 'react-bootstrap/Col';\nimport { SESSION_USER_ID } from '../Constants';\nimport Card from 'react-bootstrap/Card';\nimport { GrAdd } from \"@react-icons/all-files/gr/GrAdd\";\nimport { FaTrashAlt } from \"@react-icons/all-files/fa/FaTrashAlt\";\nimport { GrUpdate } from \"@react-icons/all-files/gr/GrUpdate\";\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row'; // Display a list of all Todos, where the user can manage, add, update, delete todos.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListTodosComponent extends Component {\n  constructor(props) {\n    super(props); // State - contains the array of todos, as well as a message for deleteTodo successful\n\n    this.state = {\n      userId: sessionStorage.getItem(SESSION_USER_ID),\n      todos: [],\n      message: null,\n      showSidebar: false\n    };\n    this.refreshTodos = this.refreshTodos.bind(this);\n    this.addTodoClicked = this.addTodoClicked.bind(this);\n    this.updateTodoClicked = this.updateTodoClicked.bind(this);\n    this.deleteTodoClicked = this.deleteTodoClicked.bind(this);\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  } // bring todos from axios get into current state for display, after initial render has been triggered.\n\n\n  componentDidMount() {\n    this.refreshTodos();\n    this.setState({\n      showSidebar: false\n    });\n  }\n\n  handleClose() {\n    //sidebar\n    this.setState({\n      showSidebar: false\n    });\n  }\n\n  handleShow() {\n    //sidebar\n    this.setState({\n      showSidebar: true\n    });\n  } // same as above, but for subsequent refreshes\n\n\n  refreshTodos() {\n    TodoDataService.retrieveAllTodos(this.state.userId).then(response => this.setState({\n      todos: response.data\n    }));\n  } // handler for when add todo is clicked\n\n\n  addTodoClicked() {\n    this.props.history.push(`/todos/-1`);\n  } // handler for when update todo is clicked\n\n\n  updateTodoClicked(todoId) {\n    this.props.history.push(`/todos/${todoId}`);\n  } // handler for when delete todo is clicked\n\n\n  deleteTodoClicked(todoId) {\n    TodoDataService.deleteTodo(this.state.userId, todoId).then(() => {\n      this.setState({\n        message: `Delete of todo ${todoId} was successful`\n      });\n      this.refreshTodos();\n    });\n  } // jsx render for entire table\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: this.handleShow,\n          children: \"TODOS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Offcanvas, {\n          show: this.state.showSidebar,\n          onHide: this.handleClose,\n          children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n              className: \"text-dark\",\n              children: \"Checklist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n            className: \"text-dark\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: [/*#__PURE__*/_jsxDEV(Card, {\n                  className: \"text-dark\",\n                  children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                    children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n                        src: \"https://free.timeanddate.com/clock/i81r8hlp/n236/tlsg/fn6/fs20/fcfff/tc000/ftb/bacfff/pa8/tt0/tw1/th2/ta1/tb4\",\n                        frameborder: \"0\",\n                        width: \"333\",\n                        height: \"68\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 97,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-dark\",\n                  children: [this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"alert alert-success\",\n                    children: this.state.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 87\n                  }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                    className: \"table text-dark\",\n                    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Task\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 105,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Done?\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 106,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Date Created\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 107,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Update\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 108,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Delete\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 109,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 104,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                      children: // script that for each todo, map it and display id, desc, done, createdDate, and buttons\n                      this.state.todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: todo.description\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 118,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: todo.isDone.toString()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 119,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: moment(todo.createdDate).format('YYYY-MM-DD')\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 120,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: /*#__PURE__*/_jsxDEV(\"button\", {\n                            className: \"btn btn-warning\",\n                            onClick: () => this.updateTodoClicked(todo.id),\n                            children: /*#__PURE__*/_jsxDEV(GrUpdate, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 121,\n                              columnNumber: 153\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 121,\n                            columnNumber: 69\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 121,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: /*#__PURE__*/_jsxDEV(\"button\", {\n                            className: \"btn btn-danger\",\n                            onClick: () => this.deleteTodoClicked(todo.id),\n                            children: /*#__PURE__*/_jsxDEV(FaTrashAlt, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 122,\n                              columnNumber: 152\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 122,\n                            columnNumber: 69\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 122,\n                          columnNumber: 65\n                        }, this)]\n                      }, todo.id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 117,\n                        columnNumber: 61\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-grid gap-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-success\",\n                      onClick: () => this.addTodoClicked(),\n                      children: /*#__PURE__*/_jsxDEV(GrAdd, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 128,\n                        columnNumber: 145\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 71\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListTodosComponent;","map":{"version":3,"sources":["/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/ListTodosComponent.jsx"],"names":["React","Component","TodoDataService","moment","Col","SESSION_USER_ID","Card","GrAdd","FaTrashAlt","GrUpdate","Offcanvas","Button","Container","Row","ListTodosComponent","constructor","props","state","userId","sessionStorage","getItem","todos","message","showSidebar","refreshTodos","bind","addTodoClicked","updateTodoClicked","deleteTodoClicked","handleShow","handleClose","componentDidMount","setState","retrieveAllTodos","then","response","data","history","push","todoId","deleteTodo","render","map","todo","description","isDone","toString","createdDate","format","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport TodoDataService from '../api/TodoDataService'\nimport moment from 'moment'\nimport Col from 'react-bootstrap/Col'\nimport { SESSION_USER_ID } from '../Constants'\nimport Card from 'react-bootstrap/Card';\nimport { GrAdd } from \"@react-icons/all-files/gr/GrAdd\";\nimport { FaTrashAlt } from \"@react-icons/all-files/fa/FaTrashAlt\";\nimport { GrUpdate } from \"@react-icons/all-files/gr/GrUpdate\";\nimport Offcanvas from 'react-bootstrap/Offcanvas'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\n\n\n\n// Display a list of all Todos, where the user can manage, add, update, delete todos.\nclass ListTodosComponent extends Component {\n\n    constructor(props) {\n        super(props)\n        // State - contains the array of todos, as well as a message for deleteTodo successful\n        this.state = {\n            userId: sessionStorage.getItem(SESSION_USER_ID),\n            todos: [],\n            message: null,\n            showSidebar: false\n        }\n        this.refreshTodos = this.refreshTodos.bind(this)\n        this.addTodoClicked = this.addTodoClicked.bind(this)\n        this.updateTodoClicked = this.updateTodoClicked.bind(this)\n        this.deleteTodoClicked = this.deleteTodoClicked.bind(this)\n\n        this.handleShow = this.handleShow.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n    // bring todos from axios get into current state for display, after initial render has been triggered.\n    componentDidMount() {\n        this.refreshTodos()\n        this.setState({ showSidebar: false });\n    }\n\n    handleClose() { //sidebar\n        this.setState({ showSidebar: false });\n    }\n\n    handleShow() { //sidebar\n        this.setState({ showSidebar: true });\n    }\n\n    // same as above, but for subsequent refreshes\n    refreshTodos() {\n        TodoDataService.retrieveAllTodos(this.state.userId)\n            .then(response => this.setState({ todos: response.data }))\n    }\n\n    // handler for when add todo is clicked\n    addTodoClicked() {\n        this.props.history.push(`/todos/-1`)\n    }\n\n    // handler for when update todo is clicked\n    updateTodoClicked(todoId) {\n        this.props.history.push(`/todos/${todoId}`)\n    }\n\n    // handler for when delete todo is clicked\n    deleteTodoClicked(todoId) {\n        TodoDataService.deleteTodo(this.state.userId, todoId)\n            .then(() => {\n                this.setState({ message: `Delete of todo ${todoId} was successful` })\n                this.refreshTodos()\n            })\n    }\n\n    // jsx render for entire table\n    render() {\n\n        return (\n            <div>\n                <Container>\n                    <Button variant=\"primary\" onClick={this.handleShow}>\n                        TODOS\n                    </Button>\n                    <Offcanvas show={this.state.showSidebar} onHide={this.handleClose}>\n                        <Offcanvas.Header closeButton>\n                            <Offcanvas.Title className=\"text-dark\">Checklist</Offcanvas.Title>\n                        </Offcanvas.Header>\n                        <Offcanvas.Body className=\"text-dark\">\n                            <Row>\n                                <Col>\n\n                                    <Card className=\"text-dark\">\n                                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\n                                        <Card.Body>\n                                            <Card.Text>\n                                            <iframe src=\"https://free.timeanddate.com/clock/i81r8hlp/n236/tlsg/fn6/fs20/fcfff/tc000/ftb/bacfff/pa8/tt0/tw1/th2/ta1/tb4\" frameborder=\"0\" width=\"333\" height=\"68\"></iframe>\n                                            </Card.Text>\n                                        </Card.Body>\n                                    </Card>\n                                    <div className=\"text-dark\">{this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\n                                        <table className=\"table text-dark\">\n                                            <thead>\n                                                <tr>\n                                                    <th>Task</th>\n                                                    <th>Done?</th>\n                                                    <th>Date Created</th>\n                                                    <th>Update</th>\n                                                    <th>Delete</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                    // script that for each todo, map it and display id, desc, done, createdDate, and buttons\n                                                    this.state.todos.map(\n                                                        todo =>\n                                                            <tr key={todo.id}>\n                                                                <td>{todo.description}</td>\n                                                                <td>{todo.isDone.toString()}</td>\n                                                                <td>{moment(todo.createdDate).format('YYYY-MM-DD')}</td>\n                                                                <td><button className=\"btn btn-warning\" onClick={() => this.updateTodoClicked(todo.id)}><GrUpdate/></button></td>\n                                                                <td><button className=\"btn btn-danger\" onClick={() => this.deleteTodoClicked(todo.id)}><FaTrashAlt/></button></td>\n                                                            </tr>\n                                                    )\n                                                }\n                                            </tbody>\n                                        </table>\n                                        <div className=\"d-grid gap-2\"><button className=\"btn btn-success\" onClick={() => this.addTodoClicked()}><GrAdd/></button></div>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Offcanvas.Body>\n                    </Offcanvas>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default ListTodosComponent"]},"metadata":{},"sourceType":"module"}