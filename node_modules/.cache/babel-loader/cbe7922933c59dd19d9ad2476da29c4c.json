{"ast":null,"code":"var _jsxFileName = \"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/ListTodosComponent.jsx\";\nimport React, { Component } from 'react';\nimport TodoDataService from '../api/TodoDataService';\nimport moment from 'moment';\nimport Placeholder from 'react-bootstrap/Placeholder';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { SESSION_USER_ID } from '../Constants'; // Display a list of all Todos, where the user can manage, add, update, delete todos.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListTodosComponent extends Component {\n  constructor(props) {\n    super(props); // State - contains the array of todos, as well as a message for deleteTodo successful\n\n    this.state = {\n      userId: sessionStorage.getItem(SESSION_USER_ID),\n      todos: [],\n      message: null\n    };\n    this.refreshTodos = this.refreshTodos.bind(this);\n    this.addTodoClicked = this.addTodoClicked.bind(this);\n    this.updateTodoClicked = this.updateTodoClicked.bind(this);\n    this.deleteTodoClicked = this.deleteTodoClicked.bind(this);\n  } // bring todos from axios get into current state for display, after initial render has been triggered.\n\n\n  componentDidMount() {\n    this.refreshTodos();\n  } // same as above, but for subsequent refreshes\n\n\n  refreshTodos() {\n    TodoDataService.retrieveAllTodos(this.state.userId).then(response => this.setState({\n      todos: response.data\n    }));\n  } // handler for when add todo is clicked\n\n\n  addTodoClicked() {\n    this.props.history.push(`/todos/-1`);\n  } // handler for when update todo is clicked\n\n\n  updateTodoClicked(todoId) {\n    this.props.history.push(`/todos/${todoId}`);\n  } // handler for when delete todo is clicked\n\n\n  deleteTodoClicked(todoId) {\n    TodoDataService.deleteTodo(this.state.userId, todoId).then(() => {\n      this.setState({\n        message: `Delete of todo ${todoId} was successful`\n      });\n      this.refreshTodos();\n    });\n  } // jsx render for entire table\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundImage: \"url(https://motionarray.imgix.net/preview-133720-7DNFEig4mX-high_0000.jpg\",\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        width: '100%',\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: [/*#__PURE__*/_jsxDEV(Placeholder, {\n              xs: 12,\n              bg: \"transparent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-dark\",\n              children: \"MY LIST\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Placeholder, {\n              xs: 12,\n              bg: \"transparent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-dark\",\n              children: [this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert alert-success\",\n                children: this.state.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 79\n              }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table text-dark\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Description\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Is Completed\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Target Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Update\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: // script that for each todo, map it and display id, desc, done, targetDate, and buttons\n                  this.state.todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: todo.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: todo.isDone.toString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: moment(todo.targetDate).format('YYYY-MM-DD')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-success\",\n                        onClick: () => this.updateTodoClicked(todo.id),\n                        children: \"Update\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 96,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-warning\",\n                        onClick: () => this.deleteTodoClicked(todo.id),\n                        children: \"Delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 97,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 57\n                    }, this)]\n                  }, todo.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 53\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-success\",\n                  onClick: () => this.addTodoClicked(),\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 54\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListTodosComponent;","map":{"version":3,"sources":["/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/ListTodosComponent.jsx"],"names":["React","Component","TodoDataService","moment","Placeholder","Container","Row","Col","SESSION_USER_ID","ListTodosComponent","constructor","props","state","userId","sessionStorage","getItem","todos","message","refreshTodos","bind","addTodoClicked","updateTodoClicked","deleteTodoClicked","componentDidMount","retrieveAllTodos","then","response","setState","data","history","push","todoId","deleteTodo","render","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","width","height","map","todo","description","isDone","toString","targetDate","format","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport TodoDataService from '../api/TodoDataService'\nimport moment from 'moment'\nimport Placeholder from 'react-bootstrap/Placeholder'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { SESSION_USER_ID } from '../Constants'\n\n// Display a list of all Todos, where the user can manage, add, update, delete todos.\nclass ListTodosComponent extends Component {\n\n    constructor(props) {\n        super(props)\n        // State - contains the array of todos, as well as a message for deleteTodo successful\n        this.state = {\n            userId: sessionStorage.getItem(SESSION_USER_ID),\n            todos: [],\n            message: null\n        }\n\n        this.refreshTodos = this.refreshTodos.bind(this)\n        this.addTodoClicked = this.addTodoClicked.bind(this)\n        this.updateTodoClicked = this.updateTodoClicked.bind(this)\n        this.deleteTodoClicked = this.deleteTodoClicked.bind(this)\n    }\n\n    // bring todos from axios get into current state for display, after initial render has been triggered.\n    componentDidMount() {\n        this.refreshTodos()\n    }\n\n    // same as above, but for subsequent refreshes\n    refreshTodos() {\n        TodoDataService.retrieveAllTodos(this.state.userId)\n            .then(response => this.setState({ todos: response.data }))\n    }\n\n    // handler for when add todo is clicked\n    addTodoClicked() {\n        this.props.history.push(`/todos/-1`)\n    }\n\n    // handler for when update todo is clicked\n    updateTodoClicked(todoId) {\n        this.props.history.push(`/todos/${todoId}`)\n    }\n\n    // handler for when delete todo is clicked\n    deleteTodoClicked(todoId) {\n        TodoDataService.deleteTodo(this.state.userId, todoId)\n            .then(() => {\n                this.setState({ message: `Delete of todo ${todoId} was successful` })\n                this.refreshTodos()\n            })\n    }\n\n    // jsx render for entire table\n    render() {\n        return (\n            <div style={{\n                backgroundImage: \"url(https://motionarray.imgix.net/preview-133720-7DNFEig4mX-high_0000.jpg\"\n                , backgroundPosition: 'center'\n                , backgroundSize: 'cover'\n                , backgroundRepeat: 'no-repeat'\n                , width: '100%'\n                , height: '100%'\n            }}>\n                <Row>\n                    <Col></Col>\n                    <Col xs={6}>\n                        <Container>\n                            <Placeholder xs={12} bg=\"transparent\" />\n                            <h1 className=\"text-dark\">MY LIST</h1>\n                            <Placeholder xs={12} bg=\"transparent\" />\n                            <div className=\"text-dark\">{this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\n                                <table className=\"table text-dark\">\n                                    <thead>\n                                        <tr>\n                                            <th>Description</th>\n                                            <th>Is Completed</th>\n                                            <th>Target Date</th>\n                                            <th>Update</th>\n                                            <th>Delete</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            // script that for each todo, map it and display id, desc, done, targetDate, and buttons\n                                            this.state.todos.map(\n                                                todo =>\n                                                    <tr key={todo.id}>\n                                                        <td>{todo.description}</td>\n                                                        <td>{todo.isDone.toString()}</td>\n                                                        <td>{moment(todo.targetDate).format('YYYY-MM-DD')}</td>\n                                                        <td><button className=\"btn btn-success\" onClick={() => this.updateTodoClicked(todo.id)}>Update</button></td>\n                                                        <td><button className=\"btn btn-warning\" onClick={() => this.deleteTodoClicked(todo.id)}>Delete</button></td>\n                                                    </tr>\n                                            )\n                                        }\n                                    </tbody>\n                                </table>\n                                <div className=\"row\"><button className=\"btn btn-success\" onClick={() => this.addTodoClicked()}>Add</button></div>\n                            </div>\n                        </Container>\n                    </Col>\n                    <Col></Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default ListTodosComponent"]},"metadata":{},"sourceType":"module"}