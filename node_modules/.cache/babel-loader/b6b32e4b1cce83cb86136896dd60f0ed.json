{"ast":null,"code":"var _jsxFileName = \"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/todo/OwnerSignupComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Form, Formik, Field, ErrorMessage } from 'formik';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport BusinessDataService from '../../api/todo/BusinessDataService.js';\nimport UserDataService from '../../api/todo/UserDataService.js';\nimport IndustryDataService from '../../api/todo/IndustryDataService.js';\nimport ReactNotification, { store } from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css'; // Page to update or add a specific todo\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass OwnerSignupComponent extends Component {\n  constructor(props) {\n    super(props); // State of the page - contains id, desc, and date for a specific todo.\n\n    this.state = {\n      name: 'aaaa',\n      email: 'a@a',\n      password: 'aaaaaaaaa',\n      businessUEN: 'abc',\n      businessName: 'name',\n      industry: 'Healthcare',\n      industryList: []\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  componentDidMount() {\n    IndustryDataService.retrieveAllIndustries().then(response => {\n      this.setState({\n        industryList: response.data\n      });\n    });\n  } // on Formik Submit, add user, and business\n\n\n  onSubmit(values) {\n    // retrieve industry object, get response containing industry, \n    // create new business with industry, get response containing business, \n    // create new user with business\n    let industry = values.industry;\n    IndustryDataService.retrieveIndustry(industry).then(response => {\n      let business = {\n        uen: values.businessUEN,\n        name: values.businessName,\n        industry: response.data\n      };\n      BusinessDataService.createBusiness(business).then(response2 => {\n        let user = {\n          email: values.email,\n          name: values.name,\n          password: values.password,\n          authority: \"ROLE_BUSINESSOWNER\",\n          business: response2.data\n        };\n        UserDataService.createUser(user).catch(error => {\n          this.setState({\n            backendValidationError: error.response.data.message\n          });\n        });\n      }).catch(error => {\n        this.setState({\n          backendValidationError: error.response.data.message\n        });\n      });\n    }).catch(error => {\n      this.setState({\n        backendValidationError: error.response.data.message\n      });\n    });\n  } // on Formik Validate call\n  // if errors populated, will not call onSubmit above\n\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.name) {\n      throwWarning(\"Please Enter Your Name!\");\n    }\n\n    if (!values.email) {\n      throwWarning(\"Please Enter Your Email!\");\n    }\n\n    if (!values.password) {\n      throwWarning(\"Please Enter Your Password!\");\n    } else if (values.password.length < 8) {\n      throwWarning(\"Password has to be at least 8 characters long!\");\n    }\n\n    if (!values.businessUEN) {\n      throwWarning(\"Please Enter Your UEN!\");\n    }\n\n    if (!values.businessName) {\n      errors.businessName = \"Enter your business name\";\n    }\n\n    if (!values.industry) {\n      errors.industry = \"Enter your industry\";\n    }\n\n    return errors;\n  }\n\n  render() {\n    let {\n      name,\n      email,\n      password,\n      businessUEN,\n      businessName,\n      industry\n    } = this.state;\n    const options = [];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ReactNotification, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-white\",\n              children: \"Signup - Business Owner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container text-white\",\n              children: /*#__PURE__*/_jsxDEV(Formik, {\n                initialValues: {\n                  name,\n                  email,\n                  password,\n                  businessUEN,\n                  businessName,\n                  industry\n                },\n                onSubmit: this.onSubmit,\n                validateOnChange: false,\n                validateOnBlur: false,\n                validate: this.validate,\n                enableReinitialize: true,\n                children: props => /*#__PURE__*/_jsxDEV(Form, {\n                  children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"name\",\n                    component: \"div\",\n                    className: \"alert alert-warning\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"email\",\n                    component: \"div\",\n                    className: \"alert alert-warning\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"password\",\n                    component: \"div\",\n                    className: \"alert alert-warning\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"businessUEN\",\n                    component: \"div\",\n                    className: \"alert alert-warning\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"businessName\",\n                    component: \"div\",\n                    className: \"alert alert-warning\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"industry\",\n                    component: \"div\",\n                    className: \"alert alert-warning\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      className: \"form-control\",\n                      type: \"text\",\n                      placeholder: \"Enter name\",\n                      name: \"name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Email Address\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      className: \"form-control\",\n                      type: \"email\",\n                      placeholder: \"Enter email\",\n                      name: \"email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 145,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      className: \"form-control\",\n                      type: \"password\",\n                      placeholder: \"Enter password\",\n                      name: \"password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Your Business UEN\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      className: \"form-control\",\n                      type: \"text\",\n                      placeholder: \"Enter Business UEN\",\n                      name: \"businessUEN\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Your Business Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      className: \"form-control\",\n                      type: \"text\",\n                      placeholder: \"Enter Business Name\",\n                      name: \"businessName\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Your Industry\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      className: \"form-control\",\n                      as: \"select\",\n                      name: \"industry\",\n                      children: this.state.industryList.map(oneIndustry => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: oneIndustry.name,\n                        children: oneIndustry.name\n                      }, oneIndustry.name, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 165,\n                        columnNumber: 65\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-success\",\n                    type: \"submit\",\n                    children: \"Sign Up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default OwnerSignupComponent; // ==================== UTILITY FUNCTIONS ====================\n\nfunction throwWarning(warningMessage) {\n  store.addNotification({\n    title: \"Warning!\",\n    message: warningMessage,\n    type: \"warning\",\n    insert: \"top\",\n    container: \"top-right\",\n    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n    dismiss: {\n      duration: 5000\n    }\n  });\n}\n\nfunction throwError(errorMessage) {\n  store.addNotification({\n    title: \"Error!\",\n    message: errorMessage,\n    type: \"danger\",\n    insert: \"top\",\n    container: \"top-right\",\n    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n    dismiss: {\n      duration: 5000\n    }\n  });\n}","map":{"version":3,"sources":["/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/todo/OwnerSignupComponent.jsx"],"names":["React","Component","Form","Formik","Field","ErrorMessage","Container","Row","Col","BusinessDataService","UserDataService","IndustryDataService","ReactNotification","store","OwnerSignupComponent","constructor","props","state","name","email","password","businessUEN","businessName","industry","industryList","onSubmit","bind","validate","componentDidMount","retrieveAllIndustries","then","response","setState","data","values","retrieveIndustry","business","uen","createBusiness","response2","user","authority","createUser","catch","error","backendValidationError","message","errors","throwWarning","length","render","options","map","oneIndustry","warningMessage","addNotification","title","type","insert","container","animationIn","animationOut","dismiss","duration","throwError","errorMessage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Form, Formik, Field, ErrorMessage } from 'formik'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport BusinessDataService from '../../api/todo/BusinessDataService.js';\nimport UserDataService from '../../api/todo/UserDataService.js';\nimport IndustryDataService from '../../api/todo/IndustryDataService.js'\nimport ReactNotification, { store } from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\n\n// Page to update or add a specific todo\nclass OwnerSignupComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        // State of the page - contains id, desc, and date for a specific todo.\n        this.state = {\n            name: 'aaaa',\n            email: 'a@a',\n            password: 'aaaaaaaaa',\n            businessUEN: 'abc',\n            businessName: 'name',\n            industry: 'Healthcare',\n            industryList: [],\n        }\n\n        this.onSubmit = this.onSubmit.bind(this)\n        this.validate = this.validate.bind(this);\n    }\n\n    componentDidMount() {\n        IndustryDataService.retrieveAllIndustries().then(\n            response => {\n                this.setState({ industryList: response.data })\n            }\n        );\n    }\n\n\n    // on Formik Submit, add user, and business\n    onSubmit(values) {\n\n        // retrieve industry object, get response containing industry, \n        // create new business with industry, get response containing business, \n        // create new user with business\n        let industry = values.industry\n        IndustryDataService.retrieveIndustry(industry).then(\n            response => {\n                let business = {\n                    uen: values.businessUEN,\n                    name: values.businessName,\n                    industry: response.data\n                }\n                BusinessDataService.createBusiness(business).then(\n                    response2 => {\n                        let user = {\n                            email: values.email,\n                            name: values.name,\n                            password: values.password,\n                            authority: \"ROLE_BUSINESSOWNER\",\n                            business: response2.data\n                        }\n                        UserDataService.createUser(user).catch((error) => {\n                            this.setState({ backendValidationError: error.response.data.message })\n                        })\n                    }\n                ).catch((error) => {\n                    this.setState({ backendValidationError: error.response.data.message })\n                })\n            }\n        ).catch((error) => {\n            this.setState({ backendValidationError: error.response.data.message })\n        })\n    }\n\n    // on Formik Validate call\n    // if errors populated, will not call onSubmit above\n    validate(values) {\n        let errors = {}\n\n        if (!values.name) {\n            throwWarning(\"Please Enter Your Name!\")\n        }\n        if (!values.email) {\n            throwWarning(\"Please Enter Your Email!\")\n        }\n        if (!values.password) {\n            throwWarning(\"Please Enter Your Password!\")\n        } else if (values.password.length < 8) {\n            throwWarning(\"Password has to be at least 8 characters long!\")\n        }\n        if (!values.businessUEN) {\n            throwWarning(\"Please Enter Your UEN!\")\n        }if (!values.businessName) {\n            errors.businessName = \"Enter your business name\"\n        }\n\n        if (!values.industry) {\n            errors.industry = \"Enter your industry\"\n        }\n\n        return errors\n    }\n\n    render() {\n\n        let { name, email, password, businessUEN, businessName, industry } = this.state\n        const options = [];\n\n        return (\n            <div>\n                <ReactNotification />\n                <Container>\n                    <Row>\n                        <Col></Col>\n                        <Col>\n                            <h1 className=\"text-white\">Signup - Business Owner</h1>\n                            <div className=\"container text-white\">\n                                <Formik\n                                    initialValues={{ name, email, password, businessUEN, businessName, industry }}\n                                    onSubmit={this.onSubmit}\n                                    validateOnChange={false}\n                                    validateOnBlur={false}\n                                    validate={this.validate}\n                                    enableReinitialize={true}\n                                >\n                                    {\n                                        (props) => (\n                                            <Form>\n                                                <ErrorMessage name=\"name\" component=\"div\" className=\"alert alert-warning\"></ErrorMessage>\n                                                <ErrorMessage name=\"email\" component=\"div\" className=\"alert alert-warning\"></ErrorMessage>\n                                                <ErrorMessage name=\"password\" component=\"div\" className=\"alert alert-warning\"></ErrorMessage>\n                                                <ErrorMessage name=\"businessUEN\" component=\"div\" className=\"alert alert-warning\"></ErrorMessage>\n                                                <ErrorMessage name=\"businessName\" component=\"div\" className=\"alert alert-warning\"></ErrorMessage>\n                                                <ErrorMessage name=\"industry\" component=\"div\" className=\"alert alert-warning\"></ErrorMessage>\n\n                                                <fieldset className=\"form-group\">\n                                                    <label>Name</label>\n                                                    <Field className=\"form-control\" type=\"text\" placeholder=\"Enter name\" name=\"name\"></Field>\n                                                </fieldset>\n                                                <fieldset className=\"form-group\">\n                                                    <label>Email Address</label>\n                                                    <Field className=\"form-control\" type=\"email\" placeholder=\"Enter email\" name=\"email\"></Field>\n                                                </fieldset>\n                                                <fieldset className=\"form-group\">\n                                                    <label>Password</label>\n                                                    <Field className=\"form-control\" type=\"password\" placeholder=\"Enter password\" name=\"password\"></Field>\n                                                </fieldset>\n                                                <fieldset className=\"form-group\">\n                                                    <label>Your Business UEN</label>\n                                                    <Field className=\"form-control\" type=\"text\" placeholder=\"Enter Business UEN\" name=\"businessUEN\"></Field>\n                                                </fieldset>\n                                                <fieldset className=\"form-group\">\n                                                    <label>Your Business Name</label>\n                                                    <Field className=\"form-control\" type=\"text\" placeholder=\"Enter Business Name\" name=\"businessName\"></Field>\n                                                </fieldset>\n\n                                                <fieldset className=\"form-group\">\n                                                    <label>Your Industry</label>\n                                                    <Field className=\"form-control\" as=\"select\" name=\"industry\">\n                                                        {this.state.industryList.map(\n                                                            oneIndustry =>\n                                                                <option key={oneIndustry.name} value={oneIndustry.name}>{oneIndustry.name}</option>\n                                                        )}\n                                                    </Field>\n                                                </fieldset>\n\n                                                <button className=\"btn btn-success\" type=\"submit\" >Sign Up</button>\n                                            </Form>\n                                        )\n                                    }\n                                </Formik>\n                            </div>\n                        </Col>\n                        <Col></Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default OwnerSignupComponent;\n\n// ==================== UTILITY FUNCTIONS ====================\n\nfunction throwWarning(warningMessage) {\n    store.addNotification({\n        title: \"Warning!\",\n        message: warningMessage,\n        type: \"warning\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n            duration: 5000,\n        }\n    });\n}\n\nfunction throwError(errorMessage) {\n    store.addNotification({\n        title: \"Error!\",\n        message: errorMessage,\n        type: \"danger\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n            duration: 5000,\n        }\n    });\n}"]},"metadata":{},"sourceType":"module"}