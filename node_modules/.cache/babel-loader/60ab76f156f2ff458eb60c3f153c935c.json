{"ast":null,"code":"var _jsxFileName = \"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/ListTodosComponent.jsx\";\nimport React, { Component } from 'react';\nimport TodoDataService from '../api/TodoDataService';\nimport moment from 'moment';\nimport Col from 'react-bootstrap/Col';\nimport { SESSION_USER_ID } from '../Constants';\nimport Card from 'react-bootstrap/Card';\nimport { GrAdd } from \"@react-icons/all-files/gr/GrAdd\";\nimport { FaTrashAlt } from \"@react-icons/all-files/fa/FaTrashAlt\";\nimport { GrUpdate } from \"@react-icons/all-files/gr/GrUpdate\";\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Placeholder from 'react-bootstrap/Placeholder'; // Display a list of all Todos, where the user can manage, add, update, delete todos.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListTodosComponent extends Component {\n  constructor(props) {\n    super(props); // State - contains the array of todos, as well as a message for deleteTodo successful\n\n    this.state = {\n      userId: sessionStorage.getItem(SESSION_USER_ID),\n      todos: [],\n      message: null,\n      showSidebar: false\n    };\n    this.refreshTodos = this.refreshTodos.bind(this);\n    this.addTodoClicked = this.addTodoClicked.bind(this);\n    this.updateTodoClicked = this.updateTodoClicked.bind(this);\n    this.deleteTodoClicked = this.deleteTodoClicked.bind(this);\n  } // bring todos from axios get into current state for display, after initial render has been triggered.\n\n\n  componentDidMount() {\n    this.refreshTodos();\n    this.setState({\n      showSidebar: false\n    });\n  } // same as above, but for subsequent refreshes\n\n\n  refreshTodos() {\n    TodoDataService.retrieveAllTodos(this.state.userId).then(response => this.setState({\n      todos: response.data\n    }));\n  } // handler for when add todo is clicked\n\n\n  addTodoClicked() {\n    this.props.history.push(`/todos/-1`);\n  } // handler for when update todo is clicked\n\n\n  updateTodoClicked(todoId) {\n    this.props.history.push(`/todos/${todoId}`);\n  } // handler for when delete todo is clicked\n\n\n  deleteTodoClicked(todoId) {\n    TodoDataService.deleteTodo(this.state.userId, todoId).then(() => {\n      this.setState({\n        message: `Delete of todo ${todoId} was successful`\n      });\n      this.refreshTodos();\n    });\n  } // jsx render for entire table\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-dark\",\n              children: \"TO DO LIST\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-dark\",\n              children: [this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert alert-success\",\n                children: this.state.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 79\n              }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table text-dark\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Task\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Done?\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Due\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Update\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: // script that for each todo, map it and display id, desc, done, targetDate, and buttons\n                  this.state.todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: todo.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: todo.isDone.toString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: moment(todo.targetDate).format('YYYY-MM-DD')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-warning\",\n                        onClick: () => this.updateTodoClicked(todo.id),\n                        children: /*#__PURE__*/_jsxDEV(GrUpdate, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 98,\n                          columnNumber: 145\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 98,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-danger\",\n                        onClick: () => this.deleteTodoClicked(todo.id),\n                        children: /*#__PURE__*/_jsxDEV(FaTrashAlt, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 99,\n                          columnNumber: 144\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 99,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 57\n                    }, this)]\n                  }, todo.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 53\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-grid gap-2\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-success\",\n                  onClick: () => this.addTodoClicked(),\n                  children: /*#__PURE__*/_jsxDEV(GrAdd, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 137\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 63\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Placeholder, {\n          xs: 12,\n          bg: \"transparent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Placeholder, {\n          xs: 12,\n          bg: \"transparent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Placeholder, {\n          xs: 12,\n          bg: \"transparent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Placeholder, {\n          xs: 12,\n          bg: \"transparent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Placeholder, {\n          xs: 12,\n          bg: \"transparent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Placeholder, {\n          xs: 12,\n          bg: \"transparent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Placeholder, {\n          xs: 12,\n          bg: \"transparent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Placeholder, {\n          xs: 12,\n          bg: \"transparent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Placeholder, {\n          xs: 12,\n          bg: \"transparent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Placeholder, {\n          xs: 12,\n          bg: \"transparent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Placeholder, {\n          xs: 12,\n          bg: \"transparent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListTodosComponent;","map":{"version":3,"sources":["/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/ListTodosComponent.jsx"],"names":["React","Component","TodoDataService","moment","Col","SESSION_USER_ID","Card","GrAdd","FaTrashAlt","GrUpdate","Offcanvas","Button","Container","Row","Placeholder","ListTodosComponent","constructor","props","state","userId","sessionStorage","getItem","todos","message","showSidebar","refreshTodos","bind","addTodoClicked","updateTodoClicked","deleteTodoClicked","componentDidMount","setState","retrieveAllTodos","then","response","data","history","push","todoId","deleteTodo","render","map","todo","description","isDone","toString","targetDate","format","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport TodoDataService from '../api/TodoDataService'\nimport moment from 'moment'\nimport Col from 'react-bootstrap/Col'\nimport { SESSION_USER_ID } from '../Constants'\nimport Card from 'react-bootstrap/Card';\nimport { GrAdd } from \"@react-icons/all-files/gr/GrAdd\";\nimport { FaTrashAlt } from \"@react-icons/all-files/fa/FaTrashAlt\";\nimport { GrUpdate } from \"@react-icons/all-files/gr/GrUpdate\";\nimport Offcanvas from 'react-bootstrap/Offcanvas'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Placeholder from 'react-bootstrap/Placeholder'\n\n\n\n// Display a list of all Todos, where the user can manage, add, update, delete todos.\nclass ListTodosComponent extends Component {\n\n    constructor(props) {\n        super(props)\n        // State - contains the array of todos, as well as a message for deleteTodo successful\n        this.state = {\n            userId: sessionStorage.getItem(SESSION_USER_ID),\n            todos: [],\n            message: null,\n            showSidebar: false\n        }\n        this.refreshTodos = this.refreshTodos.bind(this)\n        this.addTodoClicked = this.addTodoClicked.bind(this)\n        this.updateTodoClicked = this.updateTodoClicked.bind(this)\n        this.deleteTodoClicked = this.deleteTodoClicked.bind(this)\n\n\n    }\n    // bring todos from axios get into current state for display, after initial render has been triggered.\n    componentDidMount() {\n        this.refreshTodos()\n        this.setState({ showSidebar: false });\n    }\n\n\n    // same as above, but for subsequent refreshes\n    refreshTodos() {\n        TodoDataService.retrieveAllTodos(this.state.userId)\n            .then(response => this.setState({ todos: response.data }))\n    }\n\n    // handler for when add todo is clicked\n    addTodoClicked() {\n        this.props.history.push(`/todos/-1`)\n    }\n\n    // handler for when update todo is clicked\n    updateTodoClicked(todoId) {\n        this.props.history.push(`/todos/${todoId}`)\n    }\n\n    // handler for when delete todo is clicked\n    deleteTodoClicked(todoId) {\n        TodoDataService.deleteTodo(this.state.userId, todoId)\n            .then(() => {\n                this.setState({ message: `Delete of todo ${todoId} was successful` })\n                this.refreshTodos()\n            })\n    }\n\n    // jsx render for entire table\n    render() {\n\n        return (\n            <div>\n                <Container>\n                    <Row>\n                        <Col>\n                        <h1 className =\"text-dark\">TO DO LIST</h1>\n                            <div className=\"text-dark\">{this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\n                                <table className=\"table text-dark\">\n                                    <thead>\n                                        <tr>\n                                            <th>Task</th>\n                                            <th>Done?</th>\n                                            <th>Due</th>\n                                            <th>Update</th>\n                                            <th>Delete</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            // script that for each todo, map it and display id, desc, done, targetDate, and buttons\n                                            this.state.todos.map(\n                                                todo =>\n                                                    <tr key={todo.id}>\n                                                        <td>{todo.description}</td>\n                                                        <td>{todo.isDone.toString()}</td>\n                                                        <td>{moment(todo.targetDate).format('YYYY-MM-DD')}</td>\n                                                        <td><button className=\"btn btn-warning\" onClick={() => this.updateTodoClicked(todo.id)}><GrUpdate /></button></td>\n                                                        <td><button className=\"btn btn-danger\" onClick={() => this.deleteTodoClicked(todo.id)}><FaTrashAlt /></button></td>\n                                                    </tr>\n                                            )\n                                        }\n                                    </tbody>\n                                </table>\n                                <div className=\"d-grid gap-2\"><button className=\"btn btn-success\" onClick={() => this.addTodoClicked()}><GrAdd /></button></div>\n                            </div>\n                        </Col>\n                    </Row>\n\n                    <Placeholder xs={12} bg=\"transparent\" />\n                    <Placeholder xs={12} bg=\"transparent\" />\n                    <Placeholder xs={12} bg=\"transparent\" />\n                    <Placeholder xs={12} bg=\"transparent\" />\n                    <Placeholder xs={12} bg=\"transparent\" />\n                    <Placeholder xs={12} bg=\"transparent\" />\n                    <Placeholder xs={12} bg=\"transparent\" />\n                    <Placeholder xs={12} bg=\"transparent\" />\n                    <Placeholder xs={12} bg=\"transparent\" />\n                    <Placeholder xs={12} bg=\"transparent\" />\n                    <Placeholder xs={12} bg=\"transparent\" />\n\n\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default ListTodosComponent"]},"metadata":{},"sourceType":"module"}