[{"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/index.js":"1","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/App.js":"2","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/reportWebVitals.js":"3","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Constants.js":"4","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/TodoApp.jsx":"5","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/LogoutComponent.jsx":"6","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/LoginComponent.jsx":"7","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/WelcomeComponent.jsx":"8","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/SignupComponent.jsx":"9","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/ProfileComponent.jsx":"10","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/ContactusComponent.jsx":"11","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/OwnerSignupComponent.jsx":"12","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/HeaderComponent.jsx":"13","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/ErrorComponent.jsx":"14","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/FooterComponent.jsx":"15","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/AboutusComponent.jsx":"16","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/HomeComponent.jsx":"17","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/TodoComponent.jsx":"18","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/AuthenticatedRoute.jsx":"19","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/ListTodosComponent.jsx":"20","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/NewsFeedComponent.jsx":"21","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/GeneralFaq.jsx":"22","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/api/UserDataService.js":"23","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/api/IndustryDataService.js":"24","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/api/BusinessDataService.js":"25","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/api/AuthenticationService.js":"26","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/api/TodoDataService.js":"27","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/api/HelloWorldService.js":"28","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/api/NewsDataService.js":"29","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/EmployeeManagementComponent.jsx":"30","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/api/FaqDataService.js":"31","/Users/anrev/Desktop/CG1P-frontend/src/index.js":"32","/Users/anrev/Desktop/CG1P-frontend/src/App.js":"33","/Users/anrev/Desktop/CG1P-frontend/src/reportWebVitals.js":"34","/Users/anrev/Desktop/CG1P-frontend/src/Components/TodoApp.jsx":"35","/Users/anrev/Desktop/CG1P-frontend/src/Components/HeaderComponent.jsx":"36","/Users/anrev/Desktop/CG1P-frontend/src/Components/ErrorComponent.jsx":"37","/Users/anrev/Desktop/CG1P-frontend/src/Components/LogoutComponent.jsx":"38","/Users/anrev/Desktop/CG1P-frontend/src/Components/ContactusComponent.jsx":"39","/Users/anrev/Desktop/CG1P-frontend/src/Components/WelcomeComponent.jsx":"40","/Users/anrev/Desktop/CG1P-frontend/src/Components/SignupComponent.jsx":"41","/Users/anrev/Desktop/CG1P-frontend/src/Components/AboutusComponent.jsx":"42","/Users/anrev/Desktop/CG1P-frontend/src/Components/FooterComponent.jsx":"43","/Users/anrev/Desktop/CG1P-frontend/src/Components/OwnerSignupComponent.jsx":"44","/Users/anrev/Desktop/CG1P-frontend/src/Components/LoginComponent.jsx":"45","/Users/anrev/Desktop/CG1P-frontend/src/Components/TodoComponent.jsx":"46","/Users/anrev/Desktop/CG1P-frontend/src/Components/HomeComponent.jsx":"47","/Users/anrev/Desktop/CG1P-frontend/src/Components/ProfileComponent.jsx":"48","/Users/anrev/Desktop/CG1P-frontend/src/Constants.js":"49","/Users/anrev/Desktop/CG1P-frontend/src/Components/AuthenticatedRoute.jsx":"50","/Users/anrev/Desktop/CG1P-frontend/src/Components/NewsFeedComponent.jsx":"51","/Users/anrev/Desktop/CG1P-frontend/src/Components/GeneralFaq.jsx":"52","/Users/anrev/Desktop/CG1P-frontend/src/Components/SideBarComponent.jsx":"53","/Users/anrev/Desktop/CG1P-frontend/src/Components/ListTodosComponent.jsx":"54","/Users/anrev/Desktop/CG1P-frontend/src/api/AuthenticationService.js":"55","/Users/anrev/Desktop/CG1P-frontend/src/api/BusinessDataService.js":"56","/Users/anrev/Desktop/CG1P-frontend/src/api/IndustryDataService.js":"57","/Users/anrev/Desktop/CG1P-frontend/src/Components/EmployeeManagementComponent.jsx":"58","/Users/anrev/Desktop/CG1P-frontend/src/api/UserDataService.js":"59","/Users/anrev/Desktop/CG1P-frontend/src/api/HelloWorldService.js":"60","/Users/anrev/Desktop/CG1P-frontend/src/api/TodoDataService.js":"61","/Users/anrev/Desktop/CG1P-frontend/src/api/FaqDataService.js":"62","/Users/anrev/Desktop/CG1P-frontend/src/api/NewsDataService.js":"63"},{"size":504,"mtime":1635262135698,"results":"64","hashOfConfig":"65"},{"size":481,"mtime":1636251600655,"results":"66","hashOfConfig":"65"},{"size":362,"mtime":1635262135698,"results":"67","hashOfConfig":"65"},{"size":670,"mtime":1636532601687,"results":"68","hashOfConfig":"65"},{"size":3282,"mtime":1636440193138,"results":"69","hashOfConfig":"65"},{"size":399,"mtime":1636251606606,"results":"70","hashOfConfig":"65"},{"size":6117,"mtime":1636526030639,"results":"71","hashOfConfig":"65"},{"size":21729,"mtime":1636526106938,"results":"72","hashOfConfig":"65"},{"size":9587,"mtime":1636445267241,"results":"73","hashOfConfig":"65"},{"size":8754,"mtime":1636358591894,"results":"74","hashOfConfig":"65"},{"size":2127,"mtime":1636520386044,"results":"75","hashOfConfig":"65"},{"size":11921,"mtime":1636445205749,"results":"76","hashOfConfig":"65"},{"size":7768,"mtime":1636527122731,"results":"77","hashOfConfig":"65"},{"size":200,"mtime":1636251606605,"results":"78","hashOfConfig":"65"},{"size":3065,"mtime":1636520386045,"results":"79","hashOfConfig":"65"},{"size":4296,"mtime":1636520386044,"results":"80","hashOfConfig":"65"},{"size":1801,"mtime":1636358591893,"results":"81","hashOfConfig":"65"},{"size":7555,"mtime":1636526106938,"results":"82","hashOfConfig":"65"},{"size":1346,"mtime":1636251606605,"results":"83","hashOfConfig":"65"},{"size":5599,"mtime":1636526106937,"results":"84","hashOfConfig":"65"},{"size":8284,"mtime":1636521229744,"results":"85","hashOfConfig":"65"},{"size":7309,"mtime":1636524473955,"results":"86","hashOfConfig":"65"},{"size":960,"mtime":1636371611027,"results":"87","hashOfConfig":"65"},{"size":457,"mtime":1636251606609,"results":"88","hashOfConfig":"65"},{"size":450,"mtime":1636251606608,"results":"89","hashOfConfig":"65"},{"size":1853,"mtime":1636251606608,"results":"90","hashOfConfig":"65"},{"size":712,"mtime":1636358591895,"results":"91","hashOfConfig":"65"},{"size":245,"mtime":1636251606608,"results":"92","hashOfConfig":"65"},{"size":453,"mtime":1636251606609,"results":"93","hashOfConfig":"65"},{"size":3147,"mtime":1636531296551,"results":"94","hashOfConfig":"65"},{"size":245,"mtime":1636443295862,"results":"95","hashOfConfig":"65"},{"size":504,"mtime":1635262135698,"results":"96","hashOfConfig":"97"},{"size":481,"mtime":1636251600655,"results":"98","hashOfConfig":"97"},{"size":362,"mtime":1635262135698,"results":"99","hashOfConfig":"97"},{"size":3138,"mtime":1636551346255,"results":"100","hashOfConfig":"97"},{"size":8356,"mtime":1636647425106,"results":"101","hashOfConfig":"97"},{"size":200,"mtime":1636251606605,"results":"102","hashOfConfig":"97"},{"size":399,"mtime":1636251606606,"results":"103","hashOfConfig":"97"},{"size":2167,"mtime":1636628102311,"results":"104","hashOfConfig":"97"},{"size":22437,"mtime":1636648100266,"results":"105","hashOfConfig":"97"},{"size":9566,"mtime":1636633404115,"results":"106","hashOfConfig":"97"},{"size":5426,"mtime":1636608988467,"results":"107","hashOfConfig":"97"},{"size":3065,"mtime":1636520386045,"results":"108","hashOfConfig":"97"},{"size":11888,"mtime":1636633394616,"results":"109","hashOfConfig":"97"},{"size":6371,"mtime":1636651484118,"results":"110","hashOfConfig":"97"},{"size":9320,"mtime":1636609241615,"results":"111","hashOfConfig":"97"},{"size":1801,"mtime":1636358591893,"results":"112","hashOfConfig":"97"},{"size":8754,"mtime":1636358591894,"results":"113","hashOfConfig":"97"},{"size":754,"mtime":1636651461415,"results":"114","hashOfConfig":"97"},{"size":1346,"mtime":1636251606605,"results":"115","hashOfConfig":"97"},{"size":8061,"mtime":1636618210081,"results":"116","hashOfConfig":"97"},{"size":5989,"mtime":1636651420865,"results":"117","hashOfConfig":"97"},{"size":7679,"mtime":1636523529552,"results":"118","hashOfConfig":"97"},{"size":5568,"mtime":1636609452936,"results":"119","hashOfConfig":"97"},{"size":1693,"mtime":1636628102314,"results":"120","hashOfConfig":"97"},{"size":450,"mtime":1636251606608,"results":"121","hashOfConfig":"97"},{"size":457,"mtime":1636251606609,"results":"122","hashOfConfig":"97"},{"size":3222,"mtime":1636610133555,"results":"123","hashOfConfig":"97"},{"size":960,"mtime":1636371611027,"results":"124","hashOfConfig":"97"},{"size":245,"mtime":1636251606608,"results":"125","hashOfConfig":"97"},{"size":831,"mtime":1636551346257,"results":"126","hashOfConfig":"97"},{"size":234,"mtime":1636551346256,"results":"127","hashOfConfig":"97"},{"size":568,"mtime":1636628095154,"results":"128","hashOfConfig":"97"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},"1u0suz0",{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"131"},{"filePath":"173","messages":"174","errorCount":1,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"131"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},"1q7dmv3",{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"196"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"196"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"196"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"196"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"196"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"196"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"196"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"196"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/index.js",[],["268","269"],"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/App.js",[],"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/reportWebVitals.js",[],"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Constants.js",[],"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/TodoApp.jsx",[],"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/LogoutComponent.jsx",[],"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/LoginComponent.jsx",["270"],"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/WelcomeComponent.jsx",["271","272","273","274","275","276","277","278"],"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/SignupComponent.jsx",["279"],"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/ProfileComponent.jsx",[],"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/ContactusComponent.jsx",["280"],"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/OwnerSignupComponent.jsx",[],"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/HeaderComponent.jsx",["281","282"],"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/ErrorComponent.jsx",[],"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/FooterComponent.jsx",["283","284"],"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/AboutusComponent.jsx",[],"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/HomeComponent.jsx",[],"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/TodoComponent.jsx",["285","286"],"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/AuthenticatedRoute.jsx",[],"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/ListTodosComponent.jsx",["287","288","289"],"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/NewsFeedComponent.jsx",["290","291","292","293","294","295"],"import React, { Component } from \"react\";\nimport Card from 'react-bootstrap/Card'\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\nimport Placeholder from \"react-bootstrap/Placeholder\";\nimport NewsDataService from '../api/NewsDataService';\nimport Multiselect from 'multiselect-react-dropdown';\nimport Button from 'react-bootstrap/Button'\n\nimport '../newsfeed.css';\n\nclass NewsFeedComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            news: [],\n            newsDisplay: [],\n            isEmpty: false,\n            tagsSelected: {},\n            options: []\n        }\n    }\n\n    //functions that run on load\n    componentDidMount() {\n        this.refreshNews();\n    }\n\n    //function to retrieve all news items from the database\n    refreshNews() {\n        //TODO implement retrieve by date\n        NewsDataService.retrieveAllNews()\n            .then(\n                response => {\n                    this.state.isEmpty = response.data.length === 0;\n                    this.setState({ news: response.data })\n                    this.setState({ newsDisplay: response.data })\n                    // console.log(\"retrieveall made\");\n                    console.log(response);\n                    this.generateTaglist();\n                }\n            )\n    }\n\n    //function to generate a list of tags based on news retrieved\n    //todo: reduce time complexity\n    generateTaglist() {\n        var tags = {}; //list of existing tags\n        var output = []; //output format: [{value:\"tag1\"},{value:\"tag2\"}]\n        var idx = 0;\n        for (var i in this.state.news) {\n            if (this.state.news[i].tagList.length != 0) { //iterate through news items and find ones with tags\n                var arr = this.state.news[i].tagList.split(\",\");\n                for (var s in arr) {\n                    if (!tags.hasOwnProperty(arr[s])) { //\n                        tags[arr[s]] = 0;\n                        // console.log(\"adding \" + arr[s]);\n                        output[idx] = { value: arr[s] };\n                        idx++;\n                    }\n                }\n                // console.log(this.state.news[i].tagList);\n\n            }\n        }\n        this.setState({ options: output })\n    }\n\n    //function to call the api to push news into database DEV ONLY\n    apiButtonClicked() {\n        NewsDataService.triggerNewsApi()\n            .then(\n                response => {\n                    console.log(\"triggered api, storing to database\");\n                    console.log(response);\n                }\n            )\n    }\n\n    //function to process the tags and display at the bottom of the card\n    processTags(tagString) {\n        if (tagString.length == 0) {\n            return \"No tags\";\n        } else {\n            return tagString.split(\",\").join(\", \");\n        }\n    }\n\n    //function to apply filters\n    showFilteredClicked() {\n        var output = [];\n        var idx = 0;\n        for (var tag in this.state.tagsSelected) {\n            if (this.state.tagsSelected[tag]) {\n                for (var i in this.state.news) { //iterate through news with index i\n                    if (this.state.news[i].tagList.includes(tag)) {\n                        output[idx] = this.state.news[i];\n                        idx++;\n                    }\n                }\n            }\n        }\n        if (output.length == 0) {\n            this.setState({ newsDisplay: this.state.news });\n        } else {\n            this.setState({ newsDisplay: output });\n        }\n    }\n\n    //function for when a filter option is selected\n    onSelect = (selectedList, selectedItem) => { //note usage of arrow function here, necessary as this refers to multiselect, not newsfeed component see https://stackoverflow.com/questions/32317154/react-uncaught-typeerror-cannot-read-property-setstate-of-undefined?rq=1\n        var tag = selectedItem['value'];\n        this.state.tagsSelected[tag] = true;\n        console.log(JSON.stringify(this.state.tagsSelected));\n    }\n\n    //function for when a filter option is removed\n    onRemove = (selectedList, removedItem) => {\n        var tag = removedItem['value'];\n        this.state.tagsSelected[tag] = false;\n        console.log(JSON.stringify(this.state.tagsSelected));\n    }\n\n    //root component of NewsFeed that displays header, footer, and news cards\n    render() {\n\n        //==========Column for news feed to display filtered news==========//\n        let newsFeedColumn; //display empty message if there is no news in this.state\n        if (this.state.isEmpty) {\n            newsFeedColumn = <Card className=\"text-dark\">\n                <Card.Body>\n                    <Card.Text>\n                        <h1>empty!</h1>\n                    </Card.Text>\n                </Card.Body>\n            </Card>;\n        } else {\n            //iterate through all this.state.news items and display them in card form\n            newsFeedColumn = <Row xs={1} md={1} className=\"g-4\">\n                {Array.from(this.state.newsDisplay, (_, idx) => (\n                    <Col>\n                        <Card bg={'dark'}>\n                            {/*<Card.Img variant=\"top\" src=\"holder.js/100px160\" />*/}\n                            <Card.Body>\n                                <Card.Title>\n                                    <Card.Link href={this.state.newsDisplay[idx].url}>\n                                        {this.state.newsDisplay[idx].title}\n                                    </Card.Link>\n                                </Card.Title>\n                                <Card.Text>\n                                    {this.state.newsDisplay[idx].description}\n                                </Card.Text>\n                            </Card.Body>\n                            <Card.Footer>\n                                <small className=\"text-muted\">{this.processTags(this.state.newsDisplay[idx].tagList)}</small>\n                            </Card.Footer>\n                        </Card>\n                    </Col>\n                ))}\n            </Row>\n        }\n\n\n        //==========Dropdown component to select filter options==========//\n        //https://www.npmjs.com/package/multiselect-react-dropdown for more options //consider grouping?\n        let dropdown = <Multiselect\n            options={this.state.options} // Options to display in the dropdown\n            selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\n            onSelect={this.onSelect} // Function will trigger on select event\n            onRemove={this.onRemove} // Function will trigger on remove event\n            displayValue=\"value\" // Property name to display in the dropdown options\n        />\n\n\n        //==========Final render==========//\n        return (\n            <div>\n                <Placeholder xs={12} bg=\"transparent\" />\n                <h1  className=\"text-dark cg1p-header\" >News</h1>\n                <Placeholder xs={12} bg=\"transparent\" />\n                <Container>\n                    <Row>\n                        <Col xs={9}  style={{padding: \"0\"}}>\n                            {dropdown}\n                        </Col>\n                        <Col style={{padding: \"0\"}}>\n                            <Button variant=\"outline-dark\" onClick={() => this.showFilteredClicked()}>Filter</Button>\n                        </Col>\n                        <Col style={{padding: \"0\"}}>\n                            <Button variant=\"outline-dark\" onClick={() => this.apiButtonClicked()}>Fetch News</Button>\n                            {/*//todo: make buttons toggle colour when toggled*/}\n                        </Col>\n                    </Row>\n                    <Placeholder xs={12} bg=\"transparent\" />\n\n                    <Row>\n                        {/*news column*/}\n                        {/*see newsFeedColumn definition for more information*/}\n                        {newsFeedColumn}\n\n                    </Row>\n                    <Placeholder xs={12} bg=\"transparent\" />\n                </Container>\n                <Placeholder xs={12} bg=\"transparent\" style={{paddingBottom: \"50vh\"}}/>\n            </div>\n        )\n    }\n}\n\nexport default NewsFeedComponent;","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/GeneralFaq.jsx",["296","297","298","299"],"import React, { Component } from 'react';\nimport Navbar from 'react-bootstrap/Navbar'\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Row from 'react-bootstrap/Row'\nimport Placeholder from 'react-bootstrap/Placeholder'\nimport Col from 'react-bootstrap/Col'\nimport Image from 'react-bootstrap/Image'\nimport Card from 'react-bootstrap/Card'\nimport Accordion from 'react-bootstrap/Accordion'\nimport FaqDataService from '../api/FaqDataService';\n\n\n\n\n// Footer\n\nclass GeneralFaq extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            faq: [],\n            faqDisplay: [],\n            isEmpty: false,\n            tagsSelected: {},\n            options: []\n        }\n    }\n\n    getFAQ() {\n        FaqDataService.retrieveAllFAQ()\n            .then(\n                response => {\n                    this.state.isEmpty = response.data.length === 0;\n                    this.setState({ faq: response.data })\n                    this.setState({ faqDisplay: response.data })\n                    //             console.log(\"retrieval made\");\n                    console.log(response);\n                    //             this.generateTaglist();\n                }\n            )\n    }\n\n    componentDidMount() {\n        this.getFAQ()\n    }\n\n    render() {\n        return (\n            <div >\n                <Placeholder xs={12} bg=\"transparent\" />\n                <Placeholder xs={12} bg=\"transparent\" />\n                <h1 className=\"cg1p-header\">FAQ {this.state.userName}</h1>\n                <Placeholder xs={12} bg=\"transparent\" />\n                <Placeholder xs={12} bg=\"transparent\" />\n                <Row>\n                    <Col></Col>\n                    <Col xs={5}>\n                        <Form className=\"d-flex\">\n                            <FormControl\n                                type=\"search\"\n                                placeholder=\"Search\"\n                                className=\"mr-2\"\n                                aria-label=\"Search\"\n                            />\n                            <Button src=\"\" variant=\"outline-success\">Search</Button>\n                        </Form>\n                    </Col>\n                    <Col></Col>\n                </Row>\n                <Placeholder xs={12} bg=\"transparent\" />\n                <Placeholder xs={12} bg=\"transparent\" />\n                <Placeholder xs={12} bg=\"transparent\" />\n                <Placeholder xs={12} bg=\"transparent\" />\n\n                {/* the questions */}\n                <Container>\n                    <Row>\n\n                        <Accordion>\n                            <Accordion.Item eventKey=\"0\">\n                                <Accordion.Header>Do i need to declare my onsite manpower details?</Accordion.Header>\n                                <Accordion.Body className=\"text-black bg-white\">\n                                    <Row>\n                                        <Col>You are required to declare your onsite manpower if you received an email\n                                            notifying you to submit your onsite manpower details, or if there is a\n                                            “MPSubmit” reference number in your company dashboard after you have logged into GoBusiness.\n                                            For companies in the Construction, Process and, Marine and Offshore Sectors\n                                            Companies in the above sectors will not receive an email notification to submit manpower details but should still continue\n                                            to submit their manpower details for the reference numbers they see in the system that are available to them.\n                                            These companies are required to submit more information including NRIC/Fin numbers and premises/location\n                                            details in their manpower declaration. These companies will not have an “MPSubmit” reference number.</Col>\n                                        <Col> <Image src=\"https://static6.depositphotos.com/1131998/649/v/600/depositphotos_6490192-stock-illustration-smile-face.jpg\" fluid /></Col>\n                                    </Row>\n                                </Accordion.Body>\n                            </Accordion.Item>\n                            <Accordion.Item eventKey=\"1\">\n                                <Accordion.Header>Why is it necessary for me to declare my onsite manpower details?</Accordion.Header>\n                                <Accordion.Body className=\"text-black bg-white \" >\n                                    <Row>\n                                        <Col>You are required to declare your onsite manpower if you received an email\n                                            notifying you to submit your onsite manpower details, or if there is a\n                                            “MPSubmit” reference number in your company dashboard after you have logged into GoBusiness.\n                                            For companies in the Construction, Process and, Marine and Offshore Sectors\n                                            Companies in the above sectors will not receive an email notification to submit manpower details but should still continue\n                                            to submit their manpower details for the reference numbers they see in the system that are available to them.\n                                            These companies are required to submit more information including NRIC/Fin numbers and premises/location\n                                            details in their manpower declaration. These companies will not have an “MPSubmit” reference number.</Col>\n                                        <Col> <Image src=\"https://static6.depositphotos.com/1131998/649/v/600/depositphotos_6490192-stock-illustration-smile-face.jpg\" fluid /></Col>\n                                    </Row>\n                                </Accordion.Body>\n                            </Accordion.Item>\n                        </Accordion>\n\n\n                    </Row>\n                    <Placeholder xs={12} bg=\"transparent\" />\n                <Placeholder xs={12} bg=\"transparent\" />\n                <Placeholder xs={12} bg=\"transparent\" />\n                <Placeholder xs={12} bg=\"transparent\" />\n                <Placeholder xs={12} bg=\"transparent\" />\n                <Placeholder xs={12} bg=\"transparent\" />\n                <Placeholder xs={12} bg=\"transparent\" />\n                <Placeholder xs={12} bg=\"transparent\" />\n                <Placeholder xs={12} bg=\"transparent\" />\n                <Placeholder xs={12} bg=\"transparent\" />\n                <Placeholder xs={12} bg=\"transparent\" />\n                <Placeholder xs={12} bg=\"transparent\" />\n                <Placeholder xs={12} bg=\"transparent\" />\n                <Placeholder xs={12} bg=\"transparent\" />\n                <Placeholder xs={12} bg=\"transparent\" />\n                <Placeholder xs={12} bg=\"transparent\" />\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default GeneralFaq","/Users/anrev/Desktop/CG1P/frontend/todo-app/src/api/UserDataService.js",[],"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/api/IndustryDataService.js",[],"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/api/BusinessDataService.js",[],"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/api/AuthenticationService.js",[],"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/api/TodoDataService.js",[],"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/api/HelloWorldService.js",[],"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/api/NewsDataService.js",[],"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/Components/EmployeeManagementComponent.jsx",["300"],"/Users/anrev/Desktop/CG1P/frontend/todo-app/src/api/FaqDataService.js",[],"/Users/anrev/Desktop/CG1P-frontend/src/index.js",[],["301","302"],"/Users/anrev/Desktop/CG1P-frontend/src/App.js",[],"/Users/anrev/Desktop/CG1P-frontend/src/reportWebVitals.js",[],"/Users/anrev/Desktop/CG1P-frontend/src/Components/TodoApp.jsx",[],"/Users/anrev/Desktop/CG1P-frontend/src/Components/HeaderComponent.jsx",["303","304","305"],"/Users/anrev/Desktop/CG1P-frontend/src/Components/ErrorComponent.jsx",[],"/Users/anrev/Desktop/CG1P-frontend/src/Components/LogoutComponent.jsx",[],"/Users/anrev/Desktop/CG1P-frontend/src/Components/ContactusComponent.jsx",["306"],"\nimport Card from 'react-bootstrap/Card';\nimport React, { Component } from 'react';\nimport Image from 'react-bootstrap/Image';\nimport Container from 'react-bootstrap/Container';\nimport Placeholder from 'react-bootstrap/Placeholder';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport {FiSend } from \"@react-icons/all-files/fi/FiSend\";\n\n\n\nclass ContactusComponent extends Component {\n    render() {\n        return (\n            <>\n            <div>\n                <Container>\n                    <Placeholder xs={12} bg=\"transparent\"/>\n                    <h1  className=\"text-dark cg1p-header\" >Contact Us</h1>\n                    <Placeholder xs={12} bg=\"transparent\"  />\n                    <Placeholder xs={12} bg=\"transparent\" />\n                    <Image src=\"https://media.istockphoto.com/photos/young-bearded-businessman-sitting-on-desk-and-posing-picture-id1322913815?k=20&m=1322913815&s=612x612&w=0&h=vDJxUO2lrV1YtG2VoM9IGcZnPJNJ4cvGzAOhaY76A2Y=\" roundedCircle />\n                    <Form className=\"text-dark\">\n                    <Placeholder xs={12} bg=\"transparent\" />\n                    <Placeholder xs={12} bg=\"transparent\" />\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                            <Form.Label>Email address</Form.Label>\n                            <Form.Control type=\"email\" placeholder=\"name@example.com\" />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control as=\"textarea\" rows={3} />\n                        </Form.Group>\n                        <div className=\"d-grid gap-2\">\n                        <Button variant=\"outline-dark\" type=\"submit\" size=\"lg\"><FiSend /></Button>\n                        </div>\n                        </Form>\n                </Container>\n                <Placeholder xs={12} bg=\"transparent\" style={{ paddingBottom: \"50vh\" }} />\n                </div>\n            </>\n        )\n    }\n}\n\nexport default ContactusComponent;","/Users/anrev/Desktop/CG1P-frontend/src/Components/WelcomeComponent.jsx",["307","308","309","310","311","312","313","314","315"],"/Users/anrev/Desktop/CG1P-frontend/src/Components/SignupComponent.jsx",["316"],"/Users/anrev/Desktop/CG1P-frontend/src/Components/AboutusComponent.jsx",[],"/Users/anrev/Desktop/CG1P-frontend/src/Components/FooterComponent.jsx",["317","318"],"import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport { BsNewspaper } from \"@react-icons/all-files/bs/BsNewspaper\";\nimport { BsPerson}  from \"@react-icons/all-files/bs/BsPerson\";\nimport { AiOutlineHome } from \"@react-icons/all-files/ai/AiOutlineHome\";\nimport { FaQuestion} from \"@react-icons/all-files/fa/FaQuestion\";\n\n\n// Footer   \n\nclass FooterComponent extends Component {\n    render() {\n        return [\n            'Transparent',\n        ].map((variant, idx) => (\n            <footer className=\"footer\">\n                <Row>\n                    <Col>\n                        <Card bg={variant.toLowerCase()} >\n                            <h4 className=\"cg1p-header text-white text-center\">BUDDY-19</h4>\n                            <h5 className=\" cg1p-header text-white text-left\">Buddy-19 serves as both\n                                a one-stop information hub and a companion tool,\n                                providing services for business owners to better\n                                understand and manage the measures they have to\n                                take in the face of the pandemic.</h5>\n                        </Card>\n                    </Col>\n                    <Col>\n                        <Card bg={variant.toLowerCase()} >\n                            <h4 className=\"cg1p-header text-white text-center\">Site Links</h4>\n                            <p className=\"text-center\"><AiOutlineHome/>{\" \"}Home<br /><BsPerson />{\" \"}Employees<br /><BsNewspaper/>{\" \"}News<br /><FaQuestion/>{\" \"}Faq\n                            </p>\n\n                        </Card>\n                    </Col>\n                    <Col>\n                        <Card bg={variant.toLowerCase()} >\n                            <h4 className=\"cg1p-header text-white text-center\">Location</h4>\n                            <p className=\"text-center\">81 Victoria St, Singapore 188065</p>\n                            <h4 className=\"cg1p-header text-white text-center\">Contact Us</h4>\n                            <p className=\"text-center\">Hello@Buddy19.com.sg <br/> +65 61234567</p>\n                        </Card>\n                    </Col>\n                    <Col>\n                        <Card bg={variant.toLowerCase()} >\n                            \n                            <iframe width=\"400\" height=\"150\" scrolling=\"no\"  src=\"https://maps.google.com/maps?width=100%25&amp;height=600&amp;hl=en&amp;q=81%20Victoria%20St,%20Singapore%20188065+(Your%20Business%20Name)&amp;t=&amp;z=14&amp;ie=UTF8&amp;iwloc=B&amp;output=embed\"><a href=\"https://www.mapsdirections.info/en/measure-map-radius/\">www.mapsdirections.info</a></iframe>\n                        </Card>\n                    </Col>\n                    <span className=\"text-muted\">Buddy-19. All Rights Reserved.</span>\n                </Row>\n\n                \n\n            </footer>\n        ))\n    }\n}\n\nexport default FooterComponent;","/Users/anrev/Desktop/CG1P-frontend/src/Components/OwnerSignupComponent.jsx",[],"/Users/anrev/Desktop/CG1P-frontend/src/Components/LoginComponent.jsx",["319"],"/Users/anrev/Desktop/CG1P-frontend/src/Components/TodoComponent.jsx",["320","321","322","323"],"import React, { Component } from 'react'\nimport moment from 'moment'\nimport { Form, Formik, Field, ErrorMessage } from 'formik'\nimport TodoDataService from '../api/TodoDataService.js'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Placeholder from 'react-bootstrap/Placeholder'\nimport Button from 'react-bootstrap/Button'\n\nimport Card from 'react-bootstrap/Card'\n\nimport { SESSION_USER_BUSINESS, SESSION_USER_ID } from '../Constants.js'\nimport UserDataService from '../api/UserDataService.js'\nimport Multiselect from 'multiselect-react-dropdown'\nimport Switch from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n\n\n// Page to update or add a specific todo\nclass TodoComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        // State of the page - contains id, desc, and date for a specific todo.\n        this.state = {\n            userId: sessionStorage.getItem(SESSION_USER_ID),\n            id: this.props.match.params.id,\n            description: '',\n            targetDate: moment(new Date()).format('YYYY-MM-DD'),\n            listItems: [],\n            selectedValues: [],\n            employees: []\n\n        }\n\n        this.onSelect = this.onSelect.bind(this)\n        this.onRemove = this.onRemove.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n        this.validate = this.validate.bind(this)\n    }\n\n    // on load of page\n    componentDidMount() {\n\n        UserDataService.retrieveUsersByBusiness(sessionStorage.getItem(SESSION_USER_BUSINESS))\n            .then(response => {\n                this.setState({\n                    listItems: response.data.map(employee => ({\n                        name: employee.name + '  (' + employee.email + ')',\n                        value: employee.id\n                    }))\n                })\n            })\n\n        // if -1 (create), do not try to load todo as it is empty\n        if (this.state.id === \"-1\") {\n            return\n        }\n\n        TodoDataService.retrieveTodo(this.state.userId, this.state.id)\n            .then(response => this.setState({\n                description: response.data.description,\n                targetDate: moment(response.data.targetDate).format('YYYY-MM-DD'),\n                selectedValues: response.data.createdFor.map(employee => ({\n                    name: employee.name + '  (' + employee.email + ')',\n                    value: employee.id\n                })),\n                employees: response.data.createdFor.map(employee =>\n                    employee.id\n                )\n            }))\n\n        console.log(this.state.employees)\n    }\n\n    // for employee dropdown\n    onSelect(selectedList, selectedItem) {\n        this.state.employees.push(selectedItem.value)\n        console.log(this.state.employees)\n    }\n\n    // for employee dropdown\n    onRemove(selectedList, removedItem) {\n        const index = this.state.employees.indexOf(removedItem.value)\n        this.state.employees.splice(index, 1)\n        console.log(this.state.employees)\n    }\n\n    // on Formik Submit\n    onSubmit(values) {\n        let todo = {\n            description: values.description,\n            targetDate: values.targetDate,\n            createdForIds: this.state.employees\n        }\n\n        console.log(todo)\n\n        // if state (todo id) is -1, means todo does not exist yet, means create todo\n        if (this.state.id == -1) {\n            TodoDataService.createTodo(this.state.userId, todo)\n                .then(() => this.props.history.push(\"/todos\"))\n            // else state (todo id) is not -1, means todo exists, means update todo\n        } else {\n            TodoDataService.updateTodo(this.state.userId, this.state.id, todo)\n                .then(() => this.props.history.push(\"/todos\"))\n        }\n    }\n\n    // on Formik Validate call\n    // if errors populated, will not call onSubmit above\n    validate(values) {\n        let errors = {}\n\n        if (!values.description) {\n            errors.description = \"Enter a description\"\n        } else if (values.description.length < 5) {\n            errors.description = \"Enter at least 5 characters for description\"\n        }\n        if (!moment(values.targetDate).isValid()) {\n            errors.targetDate = 'Enter a valid Target Date'\n        }\n\n        return errors\n    }\n\n\n\n    render() {\n        // rely on modern JS destructuring, can assign/retrieve together\n        let { description, targetDate } = this.state\n\n        return (\n            <div>\n                <Col></Col>\n                <Col></Col>\n                <Col></Col>\n                <Col>\n                    <Container>\n                    <Placeholder xs={12} bg=\"transparent\" />\n                    <Placeholder xs={12} bg=\"transparent\" />\n                        <Row>\n                            <h1 className=\"text-dark\">Todo</h1>\n                            <Placeholder xs={12} bg=\"transparent\" />\n                            <div className=\"container text-dark \">\n                                <Formik\n                                    initialValues={{ description, targetDate }}\n                                    onSubmit={this.onSubmit}\n                                    validateOnChange={false}\n                                    validateOnBlur={false}\n                                    validate={this.validate}\n                                    enableReinitialize={true}\n                                >\n                                    {\n                                        (props) => (\n                                            <h5>\n                                            <Form>\n                                                <ErrorMessage name=\"description\" component=\"div\" className=\"alert alert-warning \"></ErrorMessage>\n                                                <fieldset className=\"form-group\">\n                                                    <label >Description</label>\n                                                    <Field className=\"form-control\" type=\"text\" name=\"description\"></Field>\n                                                </fieldset>\n                                                <Placeholder xs={12} bg=\"transparent\" />\n                                                <fieldset className=\"form-group\">\n                                                    <label >Assign To</label>\n                                                    <Multiselect\n                                                        options={this.state.listItems}\n                                                        selectedValues={this.state.selectedValues}\n                                                        onSelect={this.onSelect}\n                                                        onRemove={this.onRemove}\n                                                        displayValue=\"name\"\n                                                        showCheckbox\n                                                        closeOnSelect={false}\n                                                        placeholder=\"Select employees\"\n                                                        hidePlaceholder\n                                                        avoidHighlightFirstOption\n                                                    />\n                                                </fieldset>\n                                                \n                                                <fieldset className=\"form-group\">\n                                                    <label>Target Date</label>\n                                                    <Field className=\"form-control\" type=\"date\" name=\"targetDate\" />\n                                                </fieldset>\n\n                                                <Placeholder xs={12} bg=\"transparent\" />\n                                                <Button variant=\"outline-dark\" type=\"submit\" >Save</Button>\n                                            </Form>\n                                            </h5>\n                                        )\n                                    }\n                                </Formik>\n                                <Placeholder xs={12} bg=\"transparent\" />\n                                <Placeholder xs={12} bg=\"transparent\" />\n                                <Placeholder xs={12} bg=\"transparent\" />\n                                <Placeholder xs={12} bg=\"transparent\" />\n                                <Placeholder xs={12} bg=\"transparent\" />\n                                <Placeholder xs={12} bg=\"transparent\" />\n                                <Placeholder xs={12} bg=\"transparent\" />\n                                <Placeholder xs={12} bg=\"transparent\" />\n                                <Placeholder xs={12} bg=\"transparent\" />\n                                <Placeholder xs={12} bg=\"transparent\" />\n                                <Placeholder xs={12} bg=\"transparent\" />\n\n                            </div>\n                        </Row>\n                    </Container>\n                </Col>\n                <Col></Col>\n                <Col></Col>\n                <Col></Col>\n            </div>\n        )\n    }\n}\n\nexport default TodoComponent","/Users/anrev/Desktop/CG1P-frontend/src/Components/HomeComponent.jsx",[],"/Users/anrev/Desktop/CG1P-frontend/src/Components/ProfileComponent.jsx",[],"/Users/anrev/Desktop/CG1P-frontend/src/Constants.js",[],"/Users/anrev/Desktop/CG1P-frontend/src/Components/AuthenticatedRoute.jsx",[],"/Users/anrev/Desktop/CG1P-frontend/src/Components/NewsFeedComponent.jsx",["324","325","326","327","328","329"],"import React, { Component } from \"react\";\nimport Card from 'react-bootstrap/Card'\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\nimport Placeholder from \"react-bootstrap/Placeholder\";\nimport NewsDataService from '../api/NewsDataService';\nimport Multiselect from 'multiselect-react-dropdown';\nimport Button from 'react-bootstrap/Button'\n\nimport '../newsfeed.css';\n\nclass NewsFeedComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            news: [],\n            newsDisplay: [],\n            isEmpty: false,\n            tagsSelected: {},\n            options: []\n        }\n    }\n\n    //functions that run on load\n    componentDidMount() {\n        this.refreshNews();\n    }\n\n    //function to retrieve all news items from the database\n    refreshNews() {\n        //TODO implement retrieve by date\n        NewsDataService.retrieveAllNews()\n            .then(\n                response => {\n                    this.state.isEmpty = response.data.length === 0;\n                    this.setState({ news: response.data })\n                    this.setState({ newsDisplay: response.data })\n                    // console.log(\"retrieveall made\");\n                    console.log(response);\n                    this.generateTaglist();\n                }\n            )\n    }\n\n    //function to generate a list of tags based on news retrieved\n    //todo: reduce time complexity\n    generateTaglist() {\n        var tags = {}; //list of existing tags\n        var output = []; //output format: [{value:\"tag1\"},{value:\"tag2\"}]\n        var idx = 0;\n        for (var i in this.state.news) {\n            if (this.state.news[i].tagList.length != 0) { //iterate through news items and find ones with tags\n                var arr = this.state.news[i].tagList.split(\",\");\n                for (var s in arr) {\n                    if (!tags.hasOwnProperty(arr[s])) { //\n                        tags[arr[s]] = 0;\n                        // console.log(\"adding \" + arr[s]);\n                        output[idx] = { value: arr[s] };\n                        idx++;\n                    }\n                }\n                // console.log(this.state.news[i].tagList);\n\n            }\n        }\n        this.setState({ options: output })\n    }\n\n    //function to call the api to push news into database DEV ONLY\n\n    //function to process the tags and display at the bottom of the card\n    processTags(tagString) {\n        if (tagString.length == 0) {\n            return \"No tags\";\n        } else {\n            return tagString.split(\",\").join(\", \");\n        }\n    }\n\n    //function to apply filters\n    showFilteredClicked() {\n        var output = [];\n        var idx = 0;\n        for (var tag in this.state.tagsSelected) {\n            if (this.state.tagsSelected[tag]) {\n                for (var i in this.state.news) { //iterate through news with index i\n                    if (this.state.news[i].tagList.includes(tag)) {\n                        output[idx] = this.state.news[i];\n                        idx++;\n                    }\n                }\n            }\n        }\n        if (output.length == 0) {\n            this.setState({ newsDisplay: this.state.news });\n        } else {\n            this.setState({ newsDisplay: output });\n        }\n    }\n\n    //function for when a filter option is selected\n    onSelect = (selectedList, selectedItem) => { //note usage of arrow function here, necessary as this refers to multiselect, not newsfeed component see https://stackoverflow.com/questions/32317154/react-uncaught-typeerror-cannot-read-property-setstate-of-undefined?rq=1\n        var tag = selectedItem['value'];\n        this.state.tagsSelected[tag] = true;\n        console.log(JSON.stringify(this.state.tagsSelected));\n    }\n\n    //function for when a filter option is removed\n    onRemove = (selectedList, removedItem) => {\n        var tag = removedItem['value'];\n        this.state.tagsSelected[tag] = false;\n        console.log(JSON.stringify(this.state.tagsSelected));\n    }\n\n    //root component of NewsFeed that displays header, footer, and news cards\n    render() {\n\n        //==========Column for news feed to display filtered news==========//\n        let newsFeedColumn; //display empty message if there is no news in this.state\n        if (this.state.isEmpty) {\n            newsFeedColumn = <Card className=\"text-dark\">\n                <Card.Body>\n                    <Card.Text>\n                        <h1>empty!</h1>\n                    </Card.Text>\n                </Card.Body>\n            </Card>;\n        } else {\n            //iterate through all this.state.news items and display them in card form\n            newsFeedColumn = <Row xs={1} md={2} className=\"g-4\" style={{padding: \"0\"}}>\n                {Array.from(this.state.newsDisplay, (_, idx) => (\n                    <Col>\n                        <Card bg={'light'} text={'dark'} style={{padding:\"0\"}}>\n                            <Card.Img variant=\"top\" src={this.processTags(this.state.newsDisplay[idx].urlToImage)} />\n                            <Card.Body>\n                                <Card.Title>\n                                    <Card.Link href={this.state.newsDisplay[idx].url}>\n                                        {this.state.newsDisplay[idx].title}\n                                    </Card.Link>\n                                </Card.Title>\n                                <Card.Text>\n                                    {this.state.newsDisplay[idx].description}\n                                </Card.Text>\n                            </Card.Body>\n                            <Card.Footer>\n                                <small className=\"text-muted\">{this.processTags(this.state.newsDisplay[idx].tagList)} | {this.state.newsDisplay[idx].publishedDate} | </small>\n                            </Card.Footer>\n                        </Card>\n                    </Col>\n                ))}\n            </Row>\n        }\n\n\n        //==========Dropdown component to select filter options==========//\n        //https://www.npmjs.com/package/multiselect-react-dropdown for more options //consider grouping?\n        let dropdown = <Multiselect\n            options={this.state.options} // Options to display in the dropdown\n            selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\n            onSelect={this.onSelect} // Function will trigger on select event\n            onRemove={this.onRemove} // Function will trigger on remove event\n            displayValue=\"value\" // Property name to display in the dropdown options\n        />\n\n\n        //==========Final render==========//\n        return (\n            <div>         \n                <Placeholder xs={12} bg=\"transparent\" />\n                <Placeholder xs={12} bg=\"transparent\" />\n                <h1  className=\"text-dark cg1p-header\" >News</h1>\n                <Placeholder xs={12} bg=\"transparent\" />\n                <Placeholder xs={12} bg=\"transparent\" />\n\n                <Container>\n                    <Row>\n                        <Col xs={11} style={{padding: \"0\"}}>\n                            {dropdown}\n                        </Col>\n                        <Col style={{padding: \"0\"}}>\n                            <Button variant=\"outline-dark\" onClick={() => this.showFilteredClicked()}>Filter</Button>\n                        </Col>\n                    </Row>\n                    <Placeholder xs={12} bg=\"transparent\" />\n                    </Container>\n\n                    <Container>\n                    <Row>\n                        {/*news column*/}\n                        {/*see newsFeedColumn definition for more information*/}\n                        {newsFeedColumn}\n                    </Row>\n                    <Placeholder xs={12} bg=\"transparent\" />\n                </Container>\n                <Placeholder xs={12} bg=\"transparent\" style={{paddingBottom: \"50vh\"}}/>\n            </div>\n        )\n    }\n}\n\nexport default NewsFeedComponent;","/Users/anrev/Desktop/CG1P-frontend/src/Components/GeneralFaq.jsx",["330","331","332","333","334","335","336","337"],"/Users/anrev/Desktop/CG1P-frontend/src/Components/SideBarComponent.jsx",["338","339","340"],"import React, { Component } from 'react'\n\nimport Offcanvas from 'react-bootstrap/Offcanvas'\nimport Button from 'react-bootstrap/Button'\n\n//for todo\nimport TodoDataService from '../api/TodoDataService';\nimport moment from 'moment'\nimport Card from 'react-bootstrap/Card'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { SESSION_USER_ID } from '../Constants';\n// import Modal from 'react-bootstrap/Modal'\n\nimport { GrAdd } from \"@react-icons/all-files/gr/GrAdd\";\nimport { FaTrashAlt } from \"@react-icons/all-files/fa/FaTrashAlt\";\nimport { GrUpdate } from \"@react-icons/all-files/gr/GrUpdate\";\nimport { Link } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom';\n\n\nclass SideBarComponent extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            userId: sessionStorage.getItem(SESSION_USER_ID),\n            showSidebar: false,\n            showModal: false,\n            todos: [],\n            message: null\n        }\n        \n        this.handleShow = this.handleShow.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n\n        // this.handleShow = this.handleShowModal.bind(this);\n        // this.handleClose = this.handleCloseModal.bind(this);\n\n        this.refreshTodos = this.refreshTodos.bind(this);\n        this.addTodoClicked = this.addTodoClicked.bind(this);\n        this.updateTodoClicked = this.updateTodoClicked.bind(this);\n        this.deleteTodoClicked = this.deleteTodoClicked.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({ showSidebar: false });\n        // this.setState({ showModal: false });\n        this.refreshTodos();\n    }\n\n    handleClose() { //sidebar\n        this.setState({ showSidebar: false });\n    }\n\n    handleShow() { //sidebar\n        this.setState({ showSidebar: true });\n    }\n\n    // handleCloseModal() { //MODAL \n    //     this.setState({ showModal: false });\n    // }\n\n    // handleShowModal() { //MODAL\n    //     this.setState({ showModal: true });\n    // }\n\n    refreshTodos() {\n        console.log(this.props)\n        TodoDataService.retrieveAllTodos(this.state.userId)\n            .then(response => this.setState({ todos: response.data }))\n    }\n\n    // handler for when add todo is clicked\n    addTodoClicked() {\n        \n        console.log(this.props)\n        this.props.history.push(`/todos/-1`)\n\n    }\n\n    // handler for when update todo is clicked\n    updateTodoClicked(todoId) {\n        this.props.history.push(`/todos/${todoId}`)\n    }\n\n    // handler for when delete todo is clicked\n    deleteTodoClicked(todoId) {\n        TodoDataService.deleteTodo(this.state.userId, todoId)\n            .then(() => {\n                this.setState({ message: `Delete of todo ${todoId} was successful` })\n                this.refreshTodos()\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <Container>\n                    <Button variant=\"primary\" onClick={this.handleShow}>\n                        TODOS\n                    </Button>\n                    <Offcanvas show={this.state.showSidebar} onHide={this.handleClose}>\n                        <Offcanvas.Header closeButton>\n                            <Offcanvas.Title className=\"text-dark\">Checklist</Offcanvas.Title>\n                        </Offcanvas.Header>\n                        <Offcanvas.Body className=\"text-dark\">\n                            <Row>\n                                <Col>\n\n                                    <Card className=\"text-dark\">\n                                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\n                                        <Card.Body>\n                                            <Card.Text>\n                                            <iframe src=\"https://free.timeanddate.com/clock/i81r8hlp/n236/tlsg/fn6/fs20/fcfff/tc000/ftb/bacfff/pa8/tt0/tw1/th2/ta1/tb4\" frameborder=\"0\" width=\"333\" height=\"68\"></iframe>\n                                            </Card.Text>\n                                        </Card.Body>\n                                    </Card>\n                                    <div className=\"text-dark\">{this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\n                                        <table className=\"table text-dark\">\n                                            <thead>\n                                                <tr>\n                                                    <th>Task</th>\n                                                    <th>Done?</th>\n                                                    <th>Date Created</th>\n                                                    <th>Update</th>\n                                                    <th>Delete</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                    // script that for each todo, map it and display id, desc, done, createdDate, and buttons\n                                                    this.state.todos.map(\n                                                        todo =>\n                                                            <tr key={todo.id}>\n                                                                <td>{todo.description}</td>\n                                                                <td>{todo.isDone.toString()}</td>\n                                                                <td>{moment(todo.createdDate).format('YYYY-MM-DD')}</td>\n                                                                <td><button className=\"btn btn-warning\" onClick={() => this.updateTodoClicked(todo.id)}><GrUpdate/></button></td>\n                                                                <td><button className=\"btn btn-danger\" onClick={() => this.deleteTodoClicked(todo.id)}><FaTrashAlt/></button></td>\n                                                            </tr>\n                                                    )\n                                                }\n                                            </tbody>\n                                        </table>\n                                        <div className=\"d-grid gap-2\"><button className=\"btn btn-success\" onClick={() => this.addTodoClicked()}><GrAdd/></button></div>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Offcanvas.Body>\n                    </Offcanvas>\n                </Container>\n\n                {/* <Button variant=\"primary\" onClick={this.handleShowModal}>\n                    Launch demo modal\n                </Button>\n\n                <Modal show ={this.state.showModal} onHide={this.handleCloseModal}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Modal heading</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.handleCloseModal}>\n                            Close\n                        </Button>\n                        <Button variant=\"primary\" onClick={this.handleCloseModal}>\n                            Save Changes\n                        </Button>\n                    </Modal.Footer>\n                </Modal> */}\n            </div>\n        )\n    }\n\n}\n\nexport default SideBarComponent;","/Users/anrev/Desktop/CG1P-frontend/src/Components/ListTodosComponent.jsx",["341","342"],"import React, { Component } from 'react'\nimport TodoDataService from '../api/TodoDataService'\nimport moment from 'moment'\nimport Col from 'react-bootstrap/Col'\nimport { SESSION_USER_ID } from '../Constants'\nimport Card from 'react-bootstrap/Card';\nimport { GrAdd } from \"@react-icons/all-files/gr/GrAdd\";\nimport { FaTrashAlt } from \"@react-icons/all-files/fa/FaTrashAlt\";\nimport { GrUpdate } from \"@react-icons/all-files/gr/GrUpdate\";\nimport Offcanvas from 'react-bootstrap/Offcanvas'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Placeholder from 'react-bootstrap/Placeholder'\n\n\n\n// Display a list of all Todos, where the user can manage, add, update, delete todos.\nclass ListTodosComponent extends Component {\n\n    constructor(props) {\n        super(props)\n        // State - contains the array of todos, as well as a message for deleteTodo successful\n        this.state = {\n            userId: sessionStorage.getItem(SESSION_USER_ID),\n            todos: [],\n            message: null,\n            showSidebar: false\n        }\n\n        this.refreshTodos = this.refreshTodos.bind(this)\n        this.addTodoClicked = this.addTodoClicked.bind(this)\n        this.updateTodoClicked = this.updateTodoClicked.bind(this)\n        this.deleteTodoClicked = this.deleteTodoClicked.bind(this)\n    }\n\n    // bring todos from axios get into current state for display, after initial render has been triggered.\n    componentDidMount() {\n        this.refreshTodos()\n        this.setState({ showSidebar: false });\n    }\n\n    // same as above, but for subsequent refreshes\n    refreshTodos() {\n        TodoDataService.retrieveCreatedTodos(this.state.userId)\n            .then(response => this.setState({ todos: response.data }))\n    }\n\n    // handler for when add todo is clicked\n    addTodoClicked() {\n        this.props.history.push(`/todos/-1`)\n    }\n\n    // handler for when update todo is clicked\n    updateTodoClicked(todoId) {\n        this.props.history.push(`/todos/${todoId}`)\n    }\n\n    // handler for when delete todo is clicked\n    deleteTodoClicked(todoId) {\n        TodoDataService.deleteTodo(this.state.userId, todoId)\n            .then(() => {\n                this.setState({ message: `Delete of todo ${todoId} was successful` })\n                this.refreshTodos()\n            })\n    }\n\n    // jsx render for entire table\n    render() {\n\n        return (\n            <div>\n                <Container>\n                <Placeholder xs={12} bg=\"transparent\"  />\n                    <Row>\n                        <Col>\n                        <Placeholder xs={12} bg=\"transparent\"  />\n                        <h1 className =\"text-dark cg1p-header\">Employee Tasks</h1>\n                        <Placeholder xs={12} bg=\"transparent\"  />\n                        <Placeholder xs={12} bg=\"transparent\"  />\n                        <h3 class=\"text-dark \">Keeping track of all employee tasks assigned</h3>\n                        <Placeholder xs={12} bg=\"transparent\"  />\n                        <Placeholder xs={12} bg=\"transparent\"  />\n                            <div className=\"text-dark\">{this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\n                                <table className=\"table text-dark\">\n                                    <thead>\n                                        <tr>\n                                            <th>Task</th>\n                                            <th>Created</th>\n                                            <th>Due</th>\n                                            <th>Update</th>\n                                            <th>Delete</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            // script that for each todo, map it and display id, desc, done, targetDate, and buttons\n                                            this.state.todos.map(\n                                                todo =>\n                                                    <tr key={todo.id}>\n                                                        <td>{todo.description}</td>\n                                                        <td>{moment(todo.createdDate).format('YYYY-MM-DD')}</td>\n                                                        <td>{moment(todo.targetDate).format('YYYY-MM-DD')}</td>\n                                                        <td><button className=\"btn btn-warning\" onClick={() => this.updateTodoClicked(todo.id)}><GrUpdate /></button></td>\n                                                        <td><button className=\"btn btn-danger\" onClick={() => this.deleteTodoClicked(todo.id)}><FaTrashAlt /></button></td>\n                                                    </tr>\n                                            )\n                                        }\n                                    </tbody>\n                                </table>\n                                <div className=\"d-grid gap-2\"><Button variant=\"outline-dark\" onClick={() => this.addTodoClicked()}><GrAdd /></Button></div>\n                            </div>\n                        </Col>\n                    </Row>\n\n                    <Placeholder xs={12} bg=\"transparent\" style={{ paddingBottom: \"50vh\" }} />\n                    \n\n\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default ListTodosComponent","/Users/anrev/Desktop/CG1P-frontend/src/api/AuthenticationService.js",["343"],"import axios from 'axios'\nimport { API_URL, SESSION_INTERCEPTOR, SESSION_TOKEN, SESSION_USER_ID } from '../Constants'\n\n// Service for keeping track of currently authenticated user\n// Also facilitates retrieval of currently logged in email\nclass AuthenticationService {\n\n    // Log out\n    logout() {\n        axios.interceptors.request.eject(sessionStorage.getItem(SESSION_INTERCEPTOR))\n        sessionStorage.clear()\n    }\n\n    // Check if user is logged in\n    isUserLoggedIn() {\n        let userId = sessionStorage.getItem(SESSION_USER_ID)\n        console.log('logged in: %s', userId)\n        if (userId === null) return false\n        return true\n    }\n\n    // CODE FOR BASIC AUTH\n    // executeBasicAuthenticationService(email, password) {\n    //     return axios.get(`${API_URL}/basicauth`,\n    //         { headers: { authorization: this.createBasicAuthToken(email, password) } })\n    // }\n\n    // createBasicAuthToken(email, password) {\n    //     let token = 'Basic ' + window.btoa(email + ':' + password)\n    //     sessionStorage.setItem(SESSION_TOKEN, token)\n    //     console.log('token: %s', token)\n    //     return token\n    // }\n\n    // registerSuccessfulLoginForBasicAuth(email) {\n    //     return axios.get(`${API_URL}/user/email/${email}`)\n    // }\n\n    // BELOW CODE IS SPECIFICALLY FOR JWT AUTH\n\n    /*\n        execute authentication\n    */\n\n    executeJwtAuthenticationService(username, password) {\n        return axios.post(`${API_URL}/authenticate`, {\n            username,\n            password\n        })\n    }\n\n    registerSuccessfulLoginForJwt(email) {\n        return axios.get(`${API_URL}/user/email/${email}`)\n    }\n\n\n}\n\nexport default new AuthenticationService()","/Users/anrev/Desktop/CG1P-frontend/src/api/BusinessDataService.js",[],"/Users/anrev/Desktop/CG1P-frontend/src/api/IndustryDataService.js",[],"/Users/anrev/Desktop/CG1P-frontend/src/Components/EmployeeManagementComponent.jsx",["344"],"import Container from 'react-bootstrap/Container';\nimport Placeholder from 'react-bootstrap/Placeholder';\nimport React, { Component } from 'react';\nimport UserDataService from '../api/UserDataService';\nimport { SESSION_USER_BUSINESS } from '../Constants';\nimport { SESSION_USER_ROLE } from '../Constants';\n\nclass EmployeeManagementComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            employees: [],\n        }\n    }\n\n    componentDidMount() {\n        console.log(sessionStorage.getItem(SESSION_USER_BUSINESS))\n        UserDataService.retrieveUsersByBusiness(sessionStorage.getItem(SESSION_USER_BUSINESS))\n            .then(response => {\n                this.setState({ employees: response.data })\n            });\n    }\n\n    render() {\n\n        \n\n        if (sessionStorage.getItem(SESSION_USER_ROLE) == \"ROLE_EMPLOYEE\") {\n\n            return (\n                <Container>\n                    <Placeholder xs={12} bg=\"transparent\" />\n                    <h1 className=\"text-dark cg1p-header\" >You are not authorized to access this</h1>\n                    <Placeholder xs={12} bg=\"transparent\" style={{paddingBottom: \"70vh\"}}/>\n                </Container>\n            )\n\n        } else {\n\n\n            return (\n                <div >\n                    <Container>\n                        <Placeholder xs={12} bg=\"transparent\" />\n                        <h1 className=\"text-dark cg1p-header\" >Your Employees</h1>\n                        <Placeholder xs={12} bg=\"transparent\" />\n                        <h3 class=\"text-dark \">Employees and COVID/SHN Status</h3>\n                    </Container>\n                    <Placeholder xs={12} bg=\"transparent\" />\n                    <Placeholder xs={12} bg=\"transparent\" />\n                    <Container>\n                        <table className=\"table text-dark\">\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Email</th>\n                                    <th>Has Covid</th>\n                                    <th>Has SHN</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    this.state.employees.map(\n                                        employee =>\n                                            <tr key={employee.id}>\n                                                <td>{employee.name}</td>\n                                                <td>{employee.email}</td>\n                                                <td>{employee.covidStatus.toString()}</td>\n                                                <td>{employee.shnStatus.toString()}</td>\n                                            </tr>\n                                    )\n                                }\n                            </tbody>\n                        </table>\n                    </Container>\n                    <Placeholder xs={12} bg=\"transparent\" style={{ paddingBottom: \"50vh\" }} />\n                </div>\n            )\n        }\n    }\n}\n\nexport default EmployeeManagementComponent;","/Users/anrev/Desktop/CG1P-frontend/src/api/UserDataService.js",[],"/Users/anrev/Desktop/CG1P-frontend/src/api/HelloWorldService.js",[],"/Users/anrev/Desktop/CG1P-frontend/src/api/TodoDataService.js",[],"/Users/anrev/Desktop/CG1P-frontend/src/api/FaqDataService.js",["345"],"import axios from 'axios';\nimport { API_URL, SCRAPPED_SOURCE } from '../Constants';\n\nclass FaqDataService {\n    retrieveAllFAQ() {\n        return axios.get(`${API_URL}/faq/retrieveFromDB`);\n    }\n}\n\nexport default new FaqDataService()","/Users/anrev/Desktop/CG1P-frontend/src/api/NewsDataService.js",[],{"ruleId":"346","replacedBy":"347"},{"ruleId":"348","replacedBy":"349"},{"ruleId":"350","severity":1,"message":"351","line":3,"column":10,"nodeType":"352","messageId":"353","endLine":3,"endColumn":15},{"ruleId":"350","severity":1,"message":"354","line":17,"column":10,"nodeType":"352","messageId":"353","endLine":17,"endColumn":18},{"ruleId":"350","severity":1,"message":"355","line":19,"column":10,"nodeType":"352","messageId":"353","endLine":19,"endColumn":15},{"ruleId":"350","severity":1,"message":"356","line":20,"column":10,"nodeType":"352","messageId":"353","endLine":20,"endColumn":20},{"ruleId":"357","severity":1,"message":"358","line":138,"column":65,"nodeType":"359","endLine":138,"endColumn":229},{"ruleId":"357","severity":1,"message":"358","line":175,"column":33,"nodeType":"359","endLine":175,"endColumn":230},{"ruleId":"357","severity":1,"message":"358","line":330,"column":29,"nodeType":"359","endLine":330,"endColumn":192},{"ruleId":"357","severity":1,"message":"358","line":334,"column":29,"nodeType":"359","endLine":334,"endColumn":193},{"ruleId":"357","severity":1,"message":"358","line":346,"column":25,"nodeType":"359","endLine":346,"endColumn":144},{"ruleId":"350","severity":1,"message":"360","line":2,"column":31,"nodeType":"352","messageId":"353","endLine":2,"endColumn":43},{"ruleId":"350","severity":1,"message":"361","line":2,"column":8,"nodeType":"352","messageId":"353","endLine":2,"endColumn":12},{"ruleId":"350","severity":1,"message":"362","line":9,"column":8,"nodeType":"352","messageId":"353","endLine":9,"endColumn":19},{"ruleId":"357","severity":1,"message":"358","line":63,"column":37,"nodeType":"359","endLine":63,"endColumn":201},{"ruleId":"350","severity":1,"message":"363","line":4,"column":8,"nodeType":"352","messageId":"353","endLine":4,"endColumn":17},{"ruleId":"357","severity":1,"message":"358","line":50,"column":29,"nodeType":"359","endLine":50,"endColumn":280},{"ruleId":"350","severity":1,"message":"364","line":2,"column":8,"nodeType":"352","messageId":"353","endLine":2,"endColumn":14},{"ruleId":"365","severity":1,"message":"366","line":97,"column":27,"nodeType":"367","messageId":"368","endLine":97,"endColumn":29},{"ruleId":"350","severity":1,"message":"361","line":6,"column":8,"nodeType":"352","messageId":"353","endLine":6,"endColumn":12},{"ruleId":"350","severity":1,"message":"369","line":10,"column":8,"nodeType":"352","messageId":"353","endLine":10,"endColumn":17},{"ruleId":"350","severity":1,"message":"370","line":11,"column":8,"nodeType":"352","messageId":"353","endLine":11,"endColumn":14},{"ruleId":"371","severity":1,"message":"372","line":38,"column":21,"nodeType":"373","messageId":"374","endLine":38,"endColumn":31},{"ruleId":"365","severity":1,"message":"375","line":55,"column":51,"nodeType":"367","messageId":"368","endLine":55,"endColumn":53},{"ruleId":"365","severity":1,"message":"366","line":85,"column":30,"nodeType":"367","messageId":"368","endLine":85,"endColumn":32},{"ruleId":"365","severity":1,"message":"366","line":106,"column":27,"nodeType":"367","messageId":"368","endLine":106,"endColumn":29},{"ruleId":"371","severity":1,"message":"372","line":116,"column":9,"nodeType":"373","messageId":"374","endLine":116,"endColumn":32},{"ruleId":"371","severity":1,"message":"372","line":123,"column":9,"nodeType":"373","messageId":"374","endLine":123,"endColumn":32},{"ruleId":"350","severity":1,"message":"376","line":2,"column":8,"nodeType":"352","messageId":"353","endLine":2,"endColumn":14},{"ruleId":"350","severity":1,"message":"361","line":11,"column":8,"nodeType":"352","messageId":"353","endLine":11,"endColumn":12},{"ruleId":"371","severity":1,"message":"372","line":37,"column":21,"nodeType":"373","messageId":"374","endLine":37,"endColumn":31},{"ruleId":"377","severity":2,"message":"378","line":48,"column":9,"nodeType":"379","messageId":"380","endLine":48,"endColumn":20},{"ruleId":"365","severity":1,"message":"366","line":26,"column":55,"nodeType":"367","messageId":"368","endLine":26,"endColumn":57},{"ruleId":"346","replacedBy":"381"},{"ruleId":"348","replacedBy":"382"},{"ruleId":"350","severity":1,"message":"362","line":9,"column":8,"nodeType":"352","messageId":"353","endLine":9,"endColumn":19},{"ruleId":"365","severity":1,"message":"366","line":54,"column":55,"nodeType":"367","messageId":"368","endLine":54,"endColumn":57},{"ruleId":"357","severity":1,"message":"358","line":71,"column":41,"nodeType":"359","endLine":71,"endColumn":205},{"ruleId":"350","severity":1,"message":"361","line":2,"column":8,"nodeType":"352","messageId":"353","endLine":2,"endColumn":12},{"ruleId":"350","severity":1,"message":"383","line":6,"column":8,"nodeType":"352","messageId":"353","endLine":6,"endColumn":23},{"ruleId":"350","severity":1,"message":"354","line":19,"column":10,"nodeType":"352","messageId":"353","endLine":19,"endColumn":18},{"ruleId":"350","severity":1,"message":"355","line":21,"column":10,"nodeType":"352","messageId":"353","endLine":21,"endColumn":15},{"ruleId":"350","severity":1,"message":"356","line":22,"column":10,"nodeType":"352","messageId":"353","endLine":22,"endColumn":20},{"ruleId":"357","severity":1,"message":"358","line":140,"column":65,"nodeType":"359","endLine":140,"endColumn":229},{"ruleId":"357","severity":1,"message":"358","line":177,"column":33,"nodeType":"359","endLine":177,"endColumn":230},{"ruleId":"357","severity":1,"message":"358","line":335,"column":29,"nodeType":"359","endLine":335,"endColumn":192},{"ruleId":"357","severity":1,"message":"358","line":339,"column":29,"nodeType":"359","endLine":339,"endColumn":193},{"ruleId":"357","severity":1,"message":"358","line":351,"column":25,"nodeType":"359","endLine":351,"endColumn":144},{"ruleId":"350","severity":1,"message":"360","line":2,"column":31,"nodeType":"352","messageId":"353","endLine":2,"endColumn":43},{"ruleId":"350","severity":1,"message":"363","line":4,"column":8,"nodeType":"352","messageId":"353","endLine":4,"endColumn":17},{"ruleId":"357","severity":1,"message":"358","line":50,"column":29,"nodeType":"359","endLine":50,"endColumn":280},{"ruleId":"350","severity":1,"message":"351","line":3,"column":10,"nodeType":"352","messageId":"353","endLine":3,"endColumn":15},{"ruleId":"350","severity":1,"message":"361","line":11,"column":8,"nodeType":"352","messageId":"353","endLine":11,"endColumn":12},{"ruleId":"350","severity":1,"message":"384","line":16,"column":8,"nodeType":"352","messageId":"353","endLine":16,"endColumn":14},{"ruleId":"350","severity":1,"message":"385","line":17,"column":8,"nodeType":"352","messageId":"353","endLine":17,"endColumn":24},{"ruleId":"365","severity":1,"message":"366","line":102,"column":27,"nodeType":"367","messageId":"368","endLine":102,"endColumn":29},{"ruleId":"371","severity":1,"message":"372","line":38,"column":21,"nodeType":"373","messageId":"374","endLine":38,"endColumn":31},{"ruleId":"365","severity":1,"message":"375","line":55,"column":51,"nodeType":"367","messageId":"368","endLine":55,"endColumn":53},{"ruleId":"365","severity":1,"message":"366","line":76,"column":30,"nodeType":"367","messageId":"368","endLine":76,"endColumn":32},{"ruleId":"365","severity":1,"message":"366","line":97,"column":27,"nodeType":"367","messageId":"368","endLine":97,"endColumn":29},{"ruleId":"371","severity":1,"message":"372","line":107,"column":9,"nodeType":"373","messageId":"374","endLine":107,"endColumn":32},{"ruleId":"371","severity":1,"message":"372","line":114,"column":9,"nodeType":"373","messageId":"374","endLine":114,"endColumn":32},{"ruleId":"350","severity":1,"message":"376","line":2,"column":8,"nodeType":"352","messageId":"353","endLine":2,"endColumn":14},{"ruleId":"350","severity":1,"message":"363","line":3,"column":8,"nodeType":"352","messageId":"353","endLine":3,"endColumn":17},{"ruleId":"350","severity":1,"message":"386","line":4,"column":8,"nodeType":"352","messageId":"353","endLine":4,"endColumn":12},{"ruleId":"350","severity":1,"message":"370","line":5,"column":8,"nodeType":"352","messageId":"353","endLine":5,"endColumn":14},{"ruleId":"350","severity":1,"message":"387","line":6,"column":8,"nodeType":"352","messageId":"353","endLine":6,"endColumn":19},{"ruleId":"350","severity":1,"message":"351","line":10,"column":8,"nodeType":"352","messageId":"353","endLine":10,"endColumn":13},{"ruleId":"350","severity":1,"message":"388","line":12,"column":8,"nodeType":"352","messageId":"353","endLine":12,"endColumn":17},{"ruleId":"371","severity":1,"message":"372","line":45,"column":21,"nodeType":"373","messageId":"374","endLine":45,"endColumn":31},{"ruleId":"350","severity":1,"message":"389","line":19,"column":10,"nodeType":"352","messageId":"353","endLine":19,"endColumn":14},{"ruleId":"350","severity":1,"message":"390","line":20,"column":10,"nodeType":"352","messageId":"353","endLine":20,"endColumn":20},{"ruleId":"357","severity":1,"message":"358","line":118,"column":45,"nodeType":"359","endLine":118,"endColumn":209},{"ruleId":"350","severity":1,"message":"361","line":6,"column":8,"nodeType":"352","messageId":"353","endLine":6,"endColumn":12},{"ruleId":"350","severity":1,"message":"369","line":10,"column":8,"nodeType":"352","messageId":"353","endLine":10,"endColumn":17},{"ruleId":"350","severity":1,"message":"391","line":2,"column":40,"nodeType":"352","messageId":"353","endLine":2,"endColumn":53},{"ruleId":"365","severity":1,"message":"366","line":29,"column":55,"nodeType":"367","messageId":"368","endLine":29,"endColumn":57},{"ruleId":"350","severity":1,"message":"392","line":2,"column":19,"nodeType":"352","messageId":"353","endLine":2,"endColumn":34},"no-native-reassign",["393"],"no-negated-in-lhs",["394"],"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","'GrUpdate' is defined but never used.","'GrAdd' is defined but never used.","'FaTrashAlt' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'ErrorMessage' is defined but never used.","'Card' is defined but never used.","'NavDropdown' is defined but never used.","'Container' is defined but never used.","'moment' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Offcanvas' is defined but never used.","'Button' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","Expected '!==' and instead saw '!='.","'Navbar' is defined but never used.","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression",["393"],["394"],"'NewsDataService' is defined but never used.","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'Accordion' is defined but never used.","'Link' is defined but never used.","'useHistory' is defined but never used.","'SESSION_TOKEN' is defined but never used.","'SCRAPPED_SOURCE' is defined but never used.","no-global-assign","no-unsafe-negation"]